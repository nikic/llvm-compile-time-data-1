MESSAGE: Execution of "sudo -u lctt-runner ./build_llvm_test_suite.sh O3 stage1 " failed

STDOUT:
[251/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dBox2dCollisionAlgorithm.cpp.o
FAILED: CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dBox2dCollisionAlgorithm.cpp.o 
/tmp/llvm-test-suite-build/tools/timeit --summary CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dBox2dCollisionAlgorithm.cpp.o.time /tmp/llvm-project-build-stage1/bin/clang++ -DNDEBUG  -O3   -w -Werror=date-time -I/var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/include -std=gnu++98 -DNO_TIME -MD -MT CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dBox2dCollisionAlgorithm.cpp.o -MF CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dBox2dCollisionAlgorithm.cpp.o.d -o CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dBox2dCollisionAlgorithm.cpp.o -c /var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/btBox2dBox2dCollisionAlgorithm.cpp
PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace, preprocessed source, and associated run script.
Stack dump:
0.	Program arguments: /tmp/llvm-project-build-stage1/bin/clang++ -DNDEBUG -O3 -w -Werror=date-time -I/var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/include -std=gnu++98 -DNO_TIME -MD -MT CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dBox2dCollisionAlgorithm.cpp.o -MF CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dBox2dCollisionAlgorithm.cpp.o.d -o CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dBox2dCollisionAlgorithm.cpp.o -c /var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/btBox2dBox2dCollisionAlgorithm.cpp
1.	<eof> parser at end of file
2.	Optimizer
3.	Running pass "function<eager-inv>(float2int,lower-constant-intrinsics,chr,loop(loop-rotate<header-duplication;no-prepare-for-lto>,loop-deletion),loop-distribute,inject-tli-mappings,loop-vectorize<no-interleave-forced-only;no-vectorize-forced-only;>,infer-alignment,loop-load-elim,instcombine<max-iterations=1;no-verify-fixpoint>,simplifycfg<bonus-inst-threshold=1;forward-switch-cond;switch-range-to-icmp;switch-to-lookup;no-keep-loops;hoist-common-insts;no-hoist-loads-stores-with-cond-faulting;sink-common-insts;speculate-blocks;simplify-cond-branch;no-speculate-unpredictables>,slp-vectorizer,vector-combine,instcombine<max-iterations=1;no-verify-fixpoint>,loop-unroll<O3>,transform-warning,sroa<preserve-cfg>,infer-alignment,instcombine<max-iterations=1;no-verify-fixpoint>,loop-mssa(licm<allowspeculation>),alignment-from-assumptions,loop-sink,instsimplify,div-rem-pairs,tailcallelim,simplifycfg<bonus-inst-threshold=1;no-forward-switch-cond;switch-range-to-icmp;no-switch-to-lookup;keep-loops;no-hoist-common-insts;hoist-loads-stores-with-cond-faulting;no-sink-common-insts;speculate-blocks;simplify-cond-branch;speculate-unpredictables>)" on module "/var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/btBox2dBox2dCollisionAlgorithm.cpp"
4.	Running pass "slp-vectorizer" on function "_Z17b2CollidePolygonsP16btManifoldResultPK12btBox2dShapeRK11btTransformS3_S6_"
Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):
0  clang++   0x0000559f1a2fe4c0 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 240
1  clang++   0x0000559f1a2fc074 llvm::sys::CleanupOnSignal(unsigned long) + 164
2  clang++   0x0000559f1a24d778
3  libc.so.6 0x00007fc9e79d3520
4  clang++   0x0000559f194b3ed5 llvm::ScalarEvolution::visitAndClearUsers(llvm::SmallVectorImpl<llvm::Instruction*>&, llvm::SmallPtrSetImpl<llvm::Instruction*>&, llvm::SmallVectorImpl<llvm::SCEV const*>&) + 517
5  clang++   0x0000559f194cb5aa llvm::ScalarEvolution::forgetValue(llvm::Value*) + 170
6  clang++   0x0000559f1bdc51e2
7  clang++   0x0000559f1be3fde6 llvm::slpvectorizer::BoUpSLP::vectorizeTree(llvm::SmallDenseSet<llvm::Value*, 4u, llvm::DenseMapInfo<llvm::Value*, void>> const&, llvm::Instruction*, llvm::ArrayRef<std::tuple<llvm::Value*, unsigned int, bool>>) + 7254
8  clang++   0x0000559f1be42f6a llvm::SLPVectorizerPass::tryToVectorizeList(llvm::ArrayRef<llvm::Value*>, llvm::slpvectorizer::BoUpSLP&, bool) + 2602
9  clang++   0x0000559f1be454eb llvm::SLPVectorizerPass::vectorizeInsertElementInst(llvm::InsertElementInst*, llvm::BasicBlock*, llvm::slpvectorizer::BoUpSLP&, bool) + 459
10 clang++   0x0000559f1be51f8d llvm::SLPVectorizerPass::vectorizeInserts(llvm::SmallSetVector<llvm::Instruction*, 8u>&, llvm::BasicBlock*, llvm::slpvectorizer::BoUpSLP&) + 1149
11 clang++   0x0000559f1be54eaf llvm::SLPVectorizerPass::vectorizeChainsInBlock(llvm::BasicBlock*, llvm::slpvectorizer::BoUpSLP&) + 6719
12 clang++   0x0000559f1be573b4
13 clang++   0x0000559f1be57ed7 llvm::SLPVectorizerPass::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) + 503
14 clang++   0x0000559f1b2f0376
15 clang++   0x0000559f19db8417 llvm::PassManager<llvm::Function, llvm::AnalysisManager<llvm::Function>>::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) + 1095
16 clang++   0x0000559f18b9ed36
17 clang++   0x0000559f19dbae17 llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) + 1271
18 clang++   0x0000559f18b9f926
19 clang++   0x0000559f19db30e7 llvm::PassManager<llvm::Module, llvm::AnalysisManager<llvm::Module>>::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) + 1095
20 clang++   0x0000559f1a5880d3
21 clang++   0x0000559f1a58c29d clang::emitBackendOutput(clang::CompilerInstance&, clang::CodeGenOptions&, llvm::StringRef, llvm::Module*, clang::BackendAction, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::unique_ptr<llvm::raw_pwrite_stream, std::default_delete<llvm::raw_pwrite_stream>>, clang::BackendConsumer*) + 2253
22 clang++   0x0000559f1ac0bdb7 clang::BackendConsumer::HandleTranslationUnit(clang::ASTContext&) + 1559
23 clang++   0x0000559f1c0733dc clang::ParseAST(clang::Sema&, bool, bool) + 1164
24 clang++   0x0000559f1af4e3ce clang::FrontendAction::Execute() + 46
25 clang++   0x0000559f1aebf01b clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) + 555
26 clang++   0x0000559f1b02a67c clang::ExecuteCompilerInvocation(clang::CompilerInstance*) + 364
27 clang++   0x0000559f18b1887a cc1_main(llvm::ArrayRef<char const*>, char const*, void*) + 7178
28 clang++   0x0000559f18b100a2
29 clang++   0x0000559f1ac812cd
30 clang++   0x0000559f1a24dba7 llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) + 39
31 clang++   0x0000559f1ac81667
32 clang++   0x0000559f1ac439b1 clang::driver::Compilation::ExecuteCommand(clang::driver::Command const&, clang::driver::Command const*&, bool) const + 177
33 clang++   0x0000559f1ac44a29 clang::driver::Compilation::ExecuteJobs(clang::driver::JobList const&, llvm::SmallVectorImpl<std::pair<int, clang::driver::Command const*>>&, bool) const + 153
34 clang++   0x0000559f1ac5963f clang::driver::Driver::ExecuteCompilation(clang::driver::Compilation&, llvm::SmallVectorImpl<std::pair<int, clang::driver::Command const*>>&) + 543
35 clang++   0x0000559f18b14bc5 clang_main(int, char**, llvm::ToolContext const&) + 7509
36 clang++   0x0000559f18a1aa8b main + 107
37 libc.so.6 0x00007fc9e79bad90
38 libc.so.6 0x00007fc9e79bae40 __libc_start_main + 128
39 clang++   0x0000559f18b0fb05 _start + 37
clang++: error: clang frontend command failed with exit code 139 (use -v to see invocation)
clang version 21.0.0git
Target: x86_64-unknown-linux-gnu
Thread model: posix
InstalledDir: /tmp/llvm-project-build-stage1/bin
clang++: note: diagnostic msg: 
********************

PLEASE ATTACH THE FOLLOWING FILES TO THE BUG REPORT:
Preprocessed source(s) and associated run script(s) are located at:
clang++: note: diagnostic msg: /tmp/btBox2dBox2dCollisionAlgorithm-a530f4.cpp
clang++: note: diagnostic msg: /tmp/btBox2dBox2dCollisionAlgorithm-a530f4.sh
clang++: note: diagnostic msg: 

********************
[252/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dShape.cpp.o
FAILED: CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dShape.cpp.o 
/tmp/llvm-test-suite-build/tools/timeit --summary CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dShape.cpp.o.time /tmp/llvm-project-build-stage1/bin/clang++ -DNDEBUG  -O3   -w -Werror=date-time -I/var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/include -std=gnu++98 -DNO_TIME -MD -MT CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dShape.cpp.o -MF CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dShape.cpp.o.d -o CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dShape.cpp.o -c /var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/btBox2dShape.cpp
PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace, preprocessed source, and associated run script.
Stack dump:
0.	Program arguments: /tmp/llvm-project-build-stage1/bin/clang++ -DNDEBUG -O3 -w -Werror=date-time -I/var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/include -std=gnu++98 -DNO_TIME -MD -MT CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dShape.cpp.o -MF CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dShape.cpp.o.d -o CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dShape.cpp.o -c /var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/btBox2dShape.cpp
1.	<eof> parser at end of file
2.	Optimizer
3.	Running pass "function<eager-inv>(float2int,lower-constant-intrinsics,chr,loop(loop-rotate<header-duplication;no-prepare-for-lto>,loop-deletion),loop-distribute,inject-tli-mappings,loop-vectorize<no-interleave-forced-only;no-vectorize-forced-only;>,infer-alignment,loop-load-elim,instcombine<max-iterations=1;no-verify-fixpoint>,simplifycfg<bonus-inst-threshold=1;forward-switch-cond;switch-range-to-icmp;switch-to-lookup;no-keep-loops;hoist-common-insts;no-hoist-loads-stores-with-cond-faulting;sink-common-insts;speculate-blocks;simplify-cond-branch;no-speculate-unpredictables>,slp-vectorizer,vector-combine,instcombine<max-iterations=1;no-verify-fixpoint>,loop-unroll<O3>,transform-warning,sroa<preserve-cfg>,infer-alignment,instcombine<max-iterations=1;no-verify-fixpoint>,loop-mssa(licm<allowspeculation>),alignment-from-assumptions,loop-sink,instsimplify,div-rem-pairs,tailcallelim,simplifycfg<bonus-inst-threshold=1;no-forward-switch-cond;switch-range-to-icmp;no-switch-to-lookup;keep-loops;no-hoist-common-insts;hoist-loads-stores-with-cond-faulting;no-sink-common-insts;speculate-blocks;simplify-cond-branch;speculate-unpredictables>)" on module "/var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/btBox2dShape.cpp"
4.	Running pass "slp-vectorizer" on function "_ZNK12btBox2dShape7getAabbERK11btTransformR9btVector3S4_"
Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):
0  clang++   0x000055ac0695e4c0 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 240
1  clang++   0x000055ac0695c074 llvm::sys::CleanupOnSignal(unsigned long) + 164
2  clang++   0x000055ac068ad778
3  libc.so.6 0x00007f08bb5db520
4  clang++   0x000055ac05b13ed5 llvm::ScalarEvolution::visitAndClearUsers(llvm::SmallVectorImpl<llvm::Instruction*>&, llvm::SmallPtrSetImpl<llvm::Instruction*>&, llvm::SmallVectorImpl<llvm::SCEV const*>&) + 517
5  clang++   0x000055ac05b2b5aa llvm::ScalarEvolution::forgetValue(llvm::Value*) + 170
6  clang++   0x000055ac084251e2
7  clang++   0x000055ac0849fde6 llvm::slpvectorizer::BoUpSLP::vectorizeTree(llvm::SmallDenseSet<llvm::Value*, 4u, llvm::DenseMapInfo<llvm::Value*, void>> const&, llvm::Instruction*, llvm::ArrayRef<std::tuple<llvm::Value*, unsigned int, bool>>) + 7254
8  clang++   0x000055ac084a2f6a llvm::SLPVectorizerPass::tryToVectorizeList(llvm::ArrayRef<llvm::Value*>, llvm::slpvectorizer::BoUpSLP&, bool) + 2602
9  clang++   0x000055ac084a54eb llvm::SLPVectorizerPass::vectorizeInsertElementInst(llvm::InsertElementInst*, llvm::BasicBlock*, llvm::slpvectorizer::BoUpSLP&, bool) + 459
10 clang++   0x000055ac084b1f8d llvm::SLPVectorizerPass::vectorizeInserts(llvm::SmallSetVector<llvm::Instruction*, 8u>&, llvm::BasicBlock*, llvm::slpvectorizer::BoUpSLP&) + 1149
11 clang++   0x000055ac084b4eaf llvm::SLPVectorizerPass::vectorizeChainsInBlock(llvm::BasicBlock*, llvm::slpvectorizer::BoUpSLP&) + 6719
12 clang++   0x000055ac084b73b4
13 clang++   0x000055ac084b7ed7 llvm::SLPVectorizerPass::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) + 503
14 clang++   0x000055ac07950376
15 clang++   0x000055ac06418417 llvm::PassManager<llvm::Function, llvm::AnalysisManager<llvm::Function>>::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) + 1095
16 clang++   0x000055ac051fed36
17 clang++   0x000055ac0641ae17 llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) + 1271
18 clang++   0x000055ac051ff926
19 clang++   0x000055ac064130e7 llvm::PassManager<llvm::Module, llvm::AnalysisManager<llvm::Module>>::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) + 1095
20 clang++   0x000055ac06be80d3
21 clang++   0x000055ac06bec29d clang::emitBackendOutput(clang::CompilerInstance&, clang::CodeGenOptions&, llvm::StringRef, llvm::Module*, clang::BackendAction, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::unique_ptr<llvm::raw_pwrite_stream, std::default_delete<llvm::raw_pwrite_stream>>, clang::BackendConsumer*) + 2253
22 clang++   0x000055ac0726bdb7 clang::BackendConsumer::HandleTranslationUnit(clang::ASTContext&) + 1559
23 clang++   0x000055ac086d33dc clang::ParseAST(clang::Sema&, bool, bool) + 1164
24 clang++   0x000055ac075ae3ce clang::FrontendAction::Execute() + 46
25 clang++   0x000055ac0751f01b clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) + 555
26 clang++   0x000055ac0768a67c clang::ExecuteCompilerInvocation(clang::CompilerInstance*) + 364
27 clang++   0x000055ac0517887a cc1_main(llvm::ArrayRef<char const*>, char const*, void*) + 7178
28 clang++   0x000055ac051700a2
29 clang++   0x000055ac072e12cd
30 clang++   0x000055ac068adba7 llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) + 39
31 clang++   0x000055ac072e1667
32 clang++   0x000055ac072a39b1 clang::driver::Compilation::ExecuteCommand(clang::driver::Command const&, clang::driver::Command const*&, bool) const + 177
33 clang++   0x000055ac072a4a29 clang::driver::Compilation::ExecuteJobs(clang::driver::JobList const&, llvm::SmallVectorImpl<std::pair<int, clang::driver::Command const*>>&, bool) const + 153
34 clang++   0x000055ac072b963f clang::driver::Driver::ExecuteCompilation(clang::driver::Compilation&, llvm::SmallVectorImpl<std::pair<int, clang::driver::Command const*>>&) + 543
35 clang++   0x000055ac05174bc5 clang_main(int, char**, llvm::ToolContext const&) + 7509
36 clang++   0x000055ac0507aa8b main + 107
37 libc.so.6 0x00007f08bb5c2d90
38 libc.so.6 0x00007f08bb5c2e40 __libc_start_main + 128
39 clang++   0x000055ac0516fb05 _start + 37
clang++: error: clang frontend command failed with exit code 139 (use -v to see invocation)
clang version 21.0.0git
Target: x86_64-unknown-linux-gnu
Thread model: posix
InstalledDir: /tmp/llvm-project-build-stage1/bin
clang++: note: diagnostic msg: 
********************

PLEASE ATTACH THE FOLLOWING FILES TO THE BUG REPORT:
Preprocessed source(s) and associated run script(s) are located at:
clang++: note: diagnostic msg: /tmp/btBox2dShape-27d2ea.cpp
clang++: note: diagnostic msg: /tmp/btBox2dShape-27d2ea.sh
clang++: note: diagnostic msg: 

********************
[253/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btAxisSweep3.cpp.o
[254/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/BenchmarkDemo.cpp.o
FAILED: CTMark/Bullet/CMakeFiles/bullet.dir/BenchmarkDemo.cpp.o 
/tmp/llvm-test-suite-build/tools/timeit --summary CTMark/Bullet/CMakeFiles/bullet.dir/BenchmarkDemo.cpp.o.time /tmp/llvm-project-build-stage1/bin/clang++ -DNDEBUG  -O3   -w -Werror=date-time -I/var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/include -std=gnu++98 -DNO_TIME -MD -MT CTMark/Bullet/CMakeFiles/bullet.dir/BenchmarkDemo.cpp.o -MF CTMark/Bullet/CMakeFiles/bullet.dir/BenchmarkDemo.cpp.o.d -o CTMark/Bullet/CMakeFiles/bullet.dir/BenchmarkDemo.cpp.o -c /var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/BenchmarkDemo.cpp
PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace, preprocessed source, and associated run script.
Stack dump:
0.	Program arguments: /tmp/llvm-project-build-stage1/bin/clang++ -DNDEBUG -O3 -w -Werror=date-time -I/var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/include -std=gnu++98 -DNO_TIME -MD -MT CTMark/Bullet/CMakeFiles/bullet.dir/BenchmarkDemo.cpp.o -MF CTMark/Bullet/CMakeFiles/bullet.dir/BenchmarkDemo.cpp.o.d -o CTMark/Bullet/CMakeFiles/bullet.dir/BenchmarkDemo.cpp.o -c /var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/BenchmarkDemo.cpp
1.	<eof> parser at end of file
2.	Optimizer
3.	Running pass "function<eager-inv>(float2int,lower-constant-intrinsics,chr,loop(loop-rotate<header-duplication;no-prepare-for-lto>,loop-deletion),loop-distribute,inject-tli-mappings,loop-vectorize<no-interleave-forced-only;no-vectorize-forced-only;>,infer-alignment,loop-load-elim,instcombine<max-iterations=1;no-verify-fixpoint>,simplifycfg<bonus-inst-threshold=1;forward-switch-cond;switch-range-to-icmp;switch-to-lookup;no-keep-loops;hoist-common-insts;no-hoist-loads-stores-with-cond-faulting;sink-common-insts;speculate-blocks;simplify-cond-branch;no-speculate-unpredictables>,slp-vectorizer,vector-combine,instcombine<max-iterations=1;no-verify-fixpoint>,loop-unroll<O3>,transform-warning,sroa<preserve-cfg>,infer-alignment,instcombine<max-iterations=1;no-verify-fixpoint>,loop-mssa(licm<allowspeculation>),alignment-from-assumptions,loop-sink,instsimplify,div-rem-pairs,tailcallelim,simplifycfg<bonus-inst-threshold=1;no-forward-switch-cond;switch-range-to-icmp;no-switch-to-lookup;keep-loops;no-hoist-common-insts;hoist-loads-stores-with-cond-faulting;no-sink-common-insts;speculate-blocks;simplify-cond-branch;speculate-unpredictables>)" on module "/var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/BenchmarkDemo.cpp"
4.	Running pass "slp-vectorizer" on function "_ZN13BenchmarkDemo13createPyramidERK9btVector3iS2_"
Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):
0  clang++   0x0000560b8ecd54c0 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 240
1  clang++   0x0000560b8ecd3074 llvm::sys::CleanupOnSignal(unsigned long) + 164
2  clang++   0x0000560b8ec24778
3  libc.so.6 0x00007f5dba1c7520
4  clang++   0x0000560b8de8aed5 llvm::ScalarEvolution::visitAndClearUsers(llvm::SmallVectorImpl<llvm::Instruction*>&, llvm::SmallPtrSetImpl<llvm::Instruction*>&, llvm::SmallVectorImpl<llvm::SCEV const*>&) + 517
5  clang++   0x0000560b8dea25aa llvm::ScalarEvolution::forgetValue(llvm::Value*) + 170
6  clang++   0x0000560b9079c1e2
7  clang++   0x0000560b90816de6 llvm::slpvectorizer::BoUpSLP::vectorizeTree(llvm::SmallDenseSet<llvm::Value*, 4u, llvm::DenseMapInfo<llvm::Value*, void>> const&, llvm::Instruction*, llvm::ArrayRef<std::tuple<llvm::Value*, unsigned int, bool>>) + 7254
8  clang++   0x0000560b90819f6a llvm::SLPVectorizerPass::tryToVectorizeList(llvm::ArrayRef<llvm::Value*>, llvm::slpvectorizer::BoUpSLP&, bool) + 2602
9  clang++   0x0000560b9081ca66
10 clang++   0x0000560b9082aa71 llvm::SLPVectorizerPass::vectorizeChainsInBlock(llvm::BasicBlock*, llvm::slpvectorizer::BoUpSLP&) + 1537
11 clang++   0x0000560b9082e3b4
12 clang++   0x0000560b9082eed7 llvm::SLPVectorizerPass::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) + 503
13 clang++   0x0000560b8fcc7376
14 clang++   0x0000560b8e78f417 llvm::PassManager<llvm::Function, llvm::AnalysisManager<llvm::Function>>::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) + 1095
15 clang++   0x0000560b8d575d36
16 clang++   0x0000560b8e791e17 llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) + 1271
17 clang++   0x0000560b8d576926
18 clang++   0x0000560b8e78a0e7 llvm::PassManager<llvm::Module, llvm::AnalysisManager<llvm::Module>>::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) + 1095
19 clang++   0x0000560b8ef5f0d3
20 clang++   0x0000560b8ef6329d clang::emitBackendOutput(clang::CompilerInstance&, clang::CodeGenOptions&, llvm::StringRef, llvm::Module*, clang::BackendAction, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::unique_ptr<llvm::raw_pwrite_stream, std::default_delete<llvm::raw_pwrite_stream>>, clang::BackendConsumer*) + 2253
21 clang++   0x0000560b8f5e2db7 clang::BackendConsumer::HandleTranslationUnit(clang::ASTContext&) + 1559
22 clang++   0x0000560b90a4a3dc clang::ParseAST(clang::Sema&, bool, bool) + 1164
23 clang++   0x0000560b8f9253ce clang::FrontendAction::Execute() + 46
24 clang++   0x0000560b8f89601b clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) + 555
25 clang++   0x0000560b8fa0167c clang::ExecuteCompilerInvocation(clang::CompilerInstance*) + 364
26 clang++   0x0000560b8d4ef87a cc1_main(llvm::ArrayRef<char const*>, char const*, void*) + 7178
27 clang++   0x0000560b8d4e70a2
28 clang++   0x0000560b8f6582cd
29 clang++   0x0000560b8ec24ba7 llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) + 39
30 clang++   0x0000560b8f658667
31 clang++   0x0000560b8f61a9b1 clang::driver::Compilation::ExecuteCommand(clang::driver::Command const&, clang::driver::Command const*&, bool) const + 177
32 clang++   0x0000560b8f61ba29 clang::driver::Compilation::ExecuteJobs(clang::driver::JobList const&, llvm::SmallVectorImpl<std::pair<int, clang::driver::Command const*>>&, bool) const + 153
33 clang++   0x0000560b8f63063f clang::driver::Driver::ExecuteCompilation(clang::driver::Compilation&, llvm::SmallVectorImpl<std::pair<int, clang::driver::Command const*>>&) + 543
34 clang++   0x0000560b8d4ebbc5 clang_main(int, char**, llvm::ToolContext const&) + 7509
35 clang++   0x0000560b8d3f1a8b main + 107
36 libc.so.6 0x00007f5dba1aed90
37 libc.so.6 0x00007f5dba1aee40 __libc_start_main + 128
38 clang++   0x0000560b8d4e6b05 _start + 37
clang++: error: clang frontend command failed with exit code 139 (use -v to see invocation)
clang version 21.0.0git
Target: x86_64-unknown-linux-gnu
Thread model: posix
InstalledDir: /tmp/llvm-project-build-stage1/bin
clang++: note: diagnostic msg: 
********************

PLEASE ATTACH THE FOLLOWING FILES TO THE BUG REPORT:
Preprocessed source(s) and associated run script(s) are located at:
clang++: note: diagnostic msg: /tmp/BenchmarkDemo-9343c8.cpp
clang++: note: diagnostic msg: /tmp/BenchmarkDemo-9343c8.sh
clang++: note: diagnostic msg: 

********************
ninja: build stopped: subcommand failed.


STDERR:
MESSAGE: Execution of "sudo -u lctt-runner ./build_llvm_test_suite.sh ReleaseThinLTO stage1 " failed

STDOUT:
[225/671] Building C object CTMark/7zip/CMakeFiles/7zip-benchmark.dir/C/LzFind.c.o
[226/671] Building C object CTMark/SPASS/CMakeFiles/SPASS.dir/misc.c.o
[227/671] Building C object CTMark/SPASS/CMakeFiles/SPASS.dir/memory.c.o
[228/671] Building C object CTMark/7zip/CMakeFiles/7zip-benchmark.dir/C/Ppmd7.c.o
[229/671] Building C object CTMark/7zip/CMakeFiles/7zip-benchmark.dir/C/LzmaDec.c.o
[230/671] Building C object CTMark/7zip/CMakeFiles/7zip-benchmark.dir/C/Ppmd7Enc.c.o
[231/671] Building C object CTMark/7zip/CMakeFiles/7zip-benchmark.dir/C/Ppmd8Enc.c.o
[232/671] Building C object CTMark/7zip/CMakeFiles/7zip-benchmark.dir/C/Ppmd8Dec.c.o
[233/671] Building C object CTMark/7zip/CMakeFiles/7zip-benchmark.dir/C/Sort.c.o
[234/671] Building C object CTMark/7zip/CMakeFiles/7zip-benchmark.dir/C/Sha256.c.o
[235/671] Building C object CTMark/7zip/CMakeFiles/7zip-benchmark.dir/C/XzCrc64.c.o
[236/671] Building C object CTMark/7zip/CMakeFiles/7zip-benchmark.dir/C/Xz.c.o
[237/671] Building C object CTMark/7zip/CMakeFiles/7zip-benchmark.dir/C/Threads.c.o
[238/671] Building C object CTMark/7zip/CMakeFiles/7zip-benchmark.dir/C/XzEnc.c.o
[239/671] Building C object CTMark/ClamAV/CMakeFiles/clamscan.dir/libclamav_matcher-bm.c.o
[240/671] Building C object CTMark/7zip/CMakeFiles/7zip-benchmark.dir/C/XzDec.c.o
[241/671] Building C object CTMark/ClamAV/CMakeFiles/clamscan.dir/libclamav_matcher.c.o
[242/671] Building C object CTMark/7zip/CMakeFiles/7zip-benchmark.dir/C/Ppmd8.c.o
[243/671] Building C object CTMark/7zip/CMakeFiles/7zip-benchmark.dir/C/7zCrc.c.o
[244/671] Building C object CTMark/ClamAV/CMakeFiles/clamscan.dir/libclamav_md5.c.o
[245/671] Building C object CTMark/7zip/CMakeFiles/7zip-benchmark.dir/C/7zCrcOpt.c.o
[246/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btAlignedAllocator.cpp.o
[247/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btActivatingCollisionAlgorithm.cpp.o
[248/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/SphereTriangleDetector.cpp.o
[249/671] Building C object CTMark/7zip/CMakeFiles/7zip-benchmark.dir/C/LzmaEnc.c.o
[250/671] Building C object CTMark/ClamAV/CMakeFiles/clamscan.dir/libclamav_mbox.c.o
[251/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dShape.cpp.o
[252/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dBox2dCollisionAlgorithm.cpp.o
[253/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btConvexHull.cpp.o
[254/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btBoxBoxCollisionAlgorithm.cpp.o
[255/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btBroadphaseProxy.cpp.o
[256/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btBoxShape.cpp.o
[257/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btAxisSweep3.cpp.o
[258/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btCollisionAlgorithm.cpp.o
[259/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btBvhTriangleMeshShape.cpp.o
[260/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btBoxBoxDetector.cpp.o
[261/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btCollisionObject.cpp.o
[262/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btCapsuleShape.cpp.o
[263/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btCollisionDispatcher.cpp.o
[264/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btCollisionShape.cpp.o
[265/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btConcaveShape.cpp.o
[266/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btConeShape.cpp.o
[267/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btCompoundShape.cpp.o
[268/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btCompoundCollisionAlgorithm.cpp.o
[269/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btCollisionWorld.cpp.o
[270/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btContactConstraint.cpp.o
[271/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btContactProcessing.cpp.o
[272/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btContinuousDynamicsWorld.cpp.o
[273/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btContinuousConvexCollision.cpp.o
[274/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btConeTwistConstraint.cpp.o
[275/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btConvex2dShape.cpp.o
[276/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btConvex2dConvex2dAlgorithm.cpp.o
[277/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btConvexCast.cpp.o
[278/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/BenchmarkDemo.cpp.o
[279/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btConvexConcaveCollisionAlgorithm.cpp.o
[280/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btConvexInternalShape.cpp.o
[281/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btConvexHullShape.cpp.o
[282/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btConvexPointCloudShape.cpp.o
[283/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btConvexPlaneCollisionAlgorithm.cpp.o
[284/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btConvexConvexAlgorithm.cpp.o
[285/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btConvexTriangleMeshShape.cpp.o
[286/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btCylinderShape.cpp.o
[287/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btConvexShape.cpp.o
[288/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btDispatcher.cpp.o
[289/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btDefaultCollisionConfiguration.cpp.o
[290/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btEmptyCollisionAlgorithm.cpp.o
[291/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btDbvtBroadphase.cpp.o
[292/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btDbvt.cpp.o
[293/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btEmptyShape.cpp.o
[294/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btGImpactBvh.cpp.o
[295/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btDiscreteDynamicsWorld.cpp.o
[296/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btGeneric6DofConstraint.cpp.o
[297/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btGImpactShape.cpp.o
[298/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btGImpactQuantizedBvh.cpp.o
[299/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btGenericPoolAllocator.cpp.o
[300/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btGeneric6DofSpringConstraint.cpp.o
[301/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btGImpactCollisionAlgorithm.cpp.o
[302/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btGeometryUtil.cpp.o
[303/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btGjkConvexCast.cpp.o
[304/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btGjkEpaPenetrationDepthSolver.cpp.o
[305/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btGhostObject.cpp.o
[306/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btGjkPairDetector.cpp.o
[307/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btHeightfieldTerrainShape.cpp.o
[308/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btHinge2Constraint.cpp.o
[309/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btGjkEpa2.cpp.o
[310/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btManifoldResult.cpp.o
[311/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btKinematicCharacterController.cpp.o
[312/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btMinkowskiSumShape.cpp.o
[313/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btMinkowskiPenetrationDepthSolver.cpp.o
[314/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btHingeConstraint.cpp.o
[315/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btMultiSphereShape.cpp.o
[316/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btMultimaterialTriangleMeshShape.cpp.o
[317/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btMultiSapBroadphase.cpp.o
[318/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btPersistentManifold.cpp.o
[319/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btOverlappingPairCache.cpp.o
[320/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btOptimizedBvh.cpp.o
[321/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btPolyhedralConvexShape.cpp.o
[322/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btPoint2PointConstraint.cpp.o
[323/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btQuickprof.cpp.o
[324/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btRaycastCallback.cpp.o
[325/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btScaledBvhTriangleMeshShape.cpp.o
[326/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btQuantizedBvh.cpp.o
[327/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btRigidBody.cpp.o
[328/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btRaycastVehicle.cpp.o
[329/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btShapeHull.cpp.o
[330/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btSimpleBroadphase.cpp.o
[331/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btSimpleDynamicsWorld.cpp.o
[332/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btSequentialImpulseConstraintSolver.cpp.o
[333/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btSimulationIslandManager.cpp.o
[334/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btSliderConstraint.cpp.o
[335/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btSoftBodyRigidBodyCollisionConfiguration.cpp.o
[336/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btSoftBodyConcaveCollisionAlgorithm.cpp.o
[337/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btSoftRigidCollisionAlgorithm.cpp.o
[338/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btSolve2LinearConstraint.cpp.o
[339/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btSphereShape.cpp.o
[340/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btSoftSoftCollisionAlgorithm.cpp.o
[341/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btSoftRigidDynamicsWorld.cpp.o
[342/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btSphereBoxCollisionAlgorithm.cpp.o
[343/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btSoftBodyHelpers.cpp.o
[344/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btSphereTriangleCollisionAlgorithm.cpp.o
[345/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btSphereSphereCollisionAlgorithm.cpp.o
[346/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btStridingMeshInterface.cpp.o
[347/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btStaticPlaneShape.cpp.o
[348/671] Linking CXX executable CTMark/7zip/7zip-benchmark
[349/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btSubSimplexConvexCast.cpp.o
[350/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btTriangleCallback.cpp.o
[351/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btTriangleBuffer.cpp.o
[352/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btTetrahedronShape.cpp.o
[353/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btTriangleIndexVertexArray.cpp.o
[354/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btTriangleIndexVertexMaterialArray.cpp.o
[355/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btTriangleMeshShape.cpp.o
[356/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btTriangleMesh.cpp.o
[357/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btUniformScalingShape.cpp.o
[358/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btTypedConstraint.cpp.o
[359/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btTriangleShapeEx.cpp.o
[360/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btUnionFind.cpp.o
[361/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/gim_memory.cpp.o
[362/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btWheelInfo.cpp.o
[363/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btVoronoiSimplexSolver.cpp.o
[364/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btUniversalConstraint.cpp.o
[365/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/gim_box_set.cpp.o
[366/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/gim_contact.cpp.o
[367/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/gim_tri_collision.cpp.o
[368/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/main.cpp.o
[369/671] Building CXX object CTMark/kimwitu++/CMakeFiles/kc.dir/abs.cc.o
[370/671] Building CXX object CTMark/kimwitu++/CMakeFiles/kc.dir/gen.cc.o
[371/671] Building CXX object CTMark/kimwitu++/CMakeFiles/kc.dir/error.cc.o
[372/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btSoftBody.cpp.o
[373/671] Building CXX object CTMark/kimwitu++/CMakeFiles/kc.dir/gutil.cc.o
[374/671] Building CXX object CTMark/kimwitu++/CMakeFiles/kc.dir/kimwl.cc.o
[375/671] Building CXX object CTMark/kimwitu++/CMakeFiles/kc.dir/occur.cc.o
[376/671] Building CXX object CTMark/kimwitu++/CMakeFiles/kc.dir/kimwy.cc.o
[377/671] Building CXX object CTMark/kimwitu++/CMakeFiles/kc.dir/main.cc.o
[378/671] Building CXX object CTMark/kimwitu++/CMakeFiles/kc.dir/parse.cc.o
[379/671] Building CXX object CTMark/kimwitu++/CMakeFiles/kc.dir/pat.cc.o
[380/671] Building C object CTMark/lencod/CMakeFiles/lencod.dir/annexb.c.o
[381/671] Building C object CTMark/lencod/CMakeFiles/lencod.dir/biariencode.c.o
[382/671] Building CXX object CTMark/kimwitu++/CMakeFiles/kc.dir/util.cc.o
[383/671] Building CXX object CTMark/kimwitu++/CMakeFiles/kc.dir/rk.cc.o
[384/671] Building C object CTMark/lencod/CMakeFiles/lencod.dir/cabac.c.o
[385/671] Building C object CTMark/lencod/CMakeFiles/lencod.dir/configfile.c.o
[386/671] Building C object CTMark/lencod/CMakeFiles/lencod.dir/decoder.c.o
[387/671] Building C object CTMark/lencod/CMakeFiles/lencod.dir/context_ini.c.o
[388/671] Building C object CTMark/lencod/CMakeFiles/lencod.dir/filehandle.c.o
[389/671] Building C object CTMark/lencod/CMakeFiles/lencod.dir/explicit_gop.c.o
[390/671] Building C object CTMark/lencod/CMakeFiles/lencod.dir/fmo.c.o
[391/671] Building C object CTMark/lencod/CMakeFiles/lencod.dir/header.c.o
[392/671] Building C object CTMark/lencod/CMakeFiles/lencod.dir/block.c.o
[393/671] Building C object CTMark/lencod/CMakeFiles/lencod.dir/img_chroma.c.o
[394/671] Building C object CTMark/lencod/CMakeFiles/lencod.dir/img_luma.c.o
[395/671] Building C object CTMark/lencod/CMakeFiles/lencod.dir/intrarefresh.c.o
[396/671] Building C object CTMark/lencod/CMakeFiles/lencod.dir/leaky_bucket.c.o
[397/671] Building C object CTMark/lencod/CMakeFiles/lencod.dir/loopFilter.c.o
[398/671] Building C object CTMark/lencod/CMakeFiles/lencod.dir/image.c.o
[399/671] Building C object CTMark/lencod/CMakeFiles/lencod.dir/lencod.c.o
[400/671] Building C object CTMark/lencod/CMakeFiles/lencod.dir/mb_access.c.o
[401/671] Building CXX object CTMark/kimwitu++/CMakeFiles/kc.dir/k.cc.o
[402/671] Building C object CTMark/lencod/CMakeFiles/lencod.dir/md_high.c.o
[403/671] Building C object CTMark/lencod/CMakeFiles/lencod.dir/md_highfast.c.o
[404/671] Building C object CTMark/lencod/CMakeFiles/lencod.dir/md_highloss.c.o
[405/671] Building C object CTMark/lencod/CMakeFiles/lencod.dir/md_low.c.o
[406/671] Building C object CTMark/lencod/CMakeFiles/lencod.dir/mbuffer.c.o
[407/671] Building C object CTMark/lencod/CMakeFiles/lencod.dir/macroblock.c.o
[408/671] Building C object CTMark/lencod/CMakeFiles/lencod.dir/me_distortion.c.o
[409/671] Building CXX object CTMark/kimwitu++/CMakeFiles/kc.dir/unpk.cc.o
[410/671] Building C object CTMark/lencod/CMakeFiles/lencod.dir/me_fullsearch.c.o
[411/671] Building C object CTMark/lencod/CMakeFiles/lencod.dir/me_fullfast.c.o
[412/671] Linking CXX executable CTMark/Bullet/bullet
FAILED: CTMark/Bullet/bullet 
: && /tmp/llvm-test-suite-build/tools/timeit --summary CTMark/Bullet/bullet.link.time /tmp/llvm-project-build-stage1/bin/clang++ -O3 -fomit-frame-pointer -flto=thin -DNDEBUG  CTMark/Bullet/CMakeFiles/bullet.dir/BenchmarkDemo.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/SphereTriangleDetector.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btActivatingCollisionAlgorithm.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btAlignedAllocator.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btAxisSweep3.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dBox2dCollisionAlgorithm.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dShape.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btBoxBoxCollisionAlgorithm.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btBoxBoxDetector.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btBoxShape.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btBroadphaseProxy.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btBvhTriangleMeshShape.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btCapsuleShape.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btCollisionAlgorithm.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btCollisionDispatcher.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btCollisionObject.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btCollisionShape.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btCollisionWorld.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btCompoundCollisionAlgorithm.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btCompoundShape.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btConcaveShape.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btConeShape.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btConeTwistConstraint.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btContactConstraint.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btContactProcessing.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btContinuousConvexCollision.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btContinuousDynamicsWorld.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btConvex2dConvex2dAlgorithm.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btConvex2dShape.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btConvexCast.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btConvexConcaveCollisionAlgorithm.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btConvexConvexAlgorithm.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btConvexHull.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btConvexHullShape.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btConvexInternalShape.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btConvexPlaneCollisionAlgorithm.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btConvexPointCloudShape.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btConvexShape.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btConvexTriangleMeshShape.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btCylinderShape.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btDbvt.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btDbvtBroadphase.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btDefaultCollisionConfiguration.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btDiscreteDynamicsWorld.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btDispatcher.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btEmptyCollisionAlgorithm.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btEmptyShape.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btGImpactBvh.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btGImpactCollisionAlgorithm.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btGImpactQuantizedBvh.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btGImpactShape.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btGeneric6DofConstraint.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btGeneric6DofSpringConstraint.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btGenericPoolAllocator.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btGeometryUtil.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btGhostObject.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btGjkConvexCast.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btGjkEpa2.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btGjkEpaPenetrationDepthSolver.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btGjkPairDetector.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btHeightfieldTerrainShape.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btHinge2Constraint.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btHingeConstraint.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btKinematicCharacterController.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btManifoldResult.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btMinkowskiPenetrationDepthSolver.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btMinkowskiSumShape.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btMultiSapBroadphase.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btMultiSphereShape.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btMultimaterialTriangleMeshShape.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btOptimizedBvh.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btOverlappingPairCache.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btPersistentManifold.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btPoint2PointConstraint.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btPolyhedralConvexShape.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btQuantizedBvh.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btQuickprof.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btRaycastCallback.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btRaycastVehicle.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btRigidBody.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btScaledBvhTriangleMeshShape.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btSequentialImpulseConstraintSolver.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btShapeHull.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btSimpleBroadphase.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btSimpleDynamicsWorld.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btSimulationIslandManager.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btSliderConstraint.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btSoftBody.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btSoftBodyConcaveCollisionAlgorithm.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btSoftBodyHelpers.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btSoftBodyRigidBodyCollisionConfiguration.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btSoftRigidCollisionAlgorithm.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btSoftRigidDynamicsWorld.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btSoftSoftCollisionAlgorithm.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btSolve2LinearConstraint.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btSphereBoxCollisionAlgorithm.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btSphereShape.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btSphereSphereCollisionAlgorithm.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btSphereTriangleCollisionAlgorithm.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btStaticPlaneShape.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btStridingMeshInterface.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btSubSimplexConvexCast.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btTetrahedronShape.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btTriangleBuffer.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btTriangleCallback.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btTriangleIndexVertexArray.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btTriangleIndexVertexMaterialArray.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btTriangleMesh.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btTriangleMeshShape.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btTriangleShapeEx.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btTypedConstraint.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btUniformScalingShape.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btUnionFind.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btUniversalConstraint.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btVoronoiSimplexSolver.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/btWheelInfo.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/gim_box_set.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/gim_contact.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/gim_memory.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/gim_tri_collision.cpp.o CTMark/Bullet/CMakeFiles/bullet.dir/main.cpp.o -o CTMark/Bullet/bullet  -lm && cd /tmp/llvm-test-suite-build/CTMark/Bullet && /usr/bin/cmake -E create_symlink /var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/bullet.reference_output /tmp/llvm-test-suite-build/CTMark/Bullet/bullet.reference_output
clang++: error: unable to execute command: Segmentation fault (core dumped)
clang++: error: linker command failed due to signal (use -v to see invocation)
[413/671] Building C object CTMark/lencod/CMakeFiles/lencod.dir/me_epzs.c.o
[414/671] Building C object CTMark/lencod/CMakeFiles/lencod.dir/memalloc.c.o
[415/671] Building C object CTMark/lencod/CMakeFiles/lencod.dir/me_umhexsmp.c.o
[416/671] Building C object CTMark/lencod/CMakeFiles/lencod.dir/me_umhex.c.o
[417/671] Linking CXX executable CTMark/kimwitu++/kc
[418/671] Building CXX object CTMark/tramp3d-v4/CMakeFiles/tramp3d-v4.dir/tramp3d-v4.cpp.o
ninja: build stopped: subcommand failed.


STDERR:
MESSAGE: Execution of "sudo -u lctt-runner ./build_llvm_test_suite.sh ReleaseLTO-g stage1 " failed

STDOUT:
[252/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dShape.cpp.o
FAILED: CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dShape.cpp.o 
/tmp/llvm-test-suite-build/tools/timeit --summary CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dShape.cpp.o.time /tmp/llvm-project-build-stage1/bin/clang++ -DNDEBUG  -O3 -fomit-frame-pointer -flto -DNDEBUG -g   -w -Werror=date-time -I/var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/include -std=gnu++98 -DNO_TIME -MD -MT CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dShape.cpp.o -MF CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dShape.cpp.o.d -o CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dShape.cpp.o -c /var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/btBox2dShape.cpp
PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace, preprocessed source, and associated run script.
Stack dump:
0.	Program arguments: /tmp/llvm-project-build-stage1/bin/clang++ -DNDEBUG -O3 -fomit-frame-pointer -flto -DNDEBUG -g -w -Werror=date-time -I/var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/include -std=gnu++98 -DNO_TIME -MD -MT CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dShape.cpp.o -MF CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dShape.cpp.o.d -o CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dShape.cpp.o -c /var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/btBox2dShape.cpp
1.	<eof> parser at end of file
2.	Optimizer
3.	Running pass "function<eager-inv>(float2int,lower-constant-intrinsics,chr,loop(loop-rotate<header-duplication;prepare-for-lto>,loop-deletion),loop-distribute,inject-tli-mappings,loop-vectorize<no-interleave-forced-only;no-vectorize-forced-only;>,infer-alignment,loop-load-elim,instcombine<max-iterations=1;no-verify-fixpoint>,simplifycfg<bonus-inst-threshold=1;forward-switch-cond;switch-range-to-icmp;switch-to-lookup;no-keep-loops;hoist-common-insts;no-hoist-loads-stores-with-cond-faulting;sink-common-insts;speculate-blocks;simplify-cond-branch;no-speculate-unpredictables>,slp-vectorizer,vector-combine,instcombine<max-iterations=1;no-verify-fixpoint>,loop-unroll<O3>,transform-warning,sroa<preserve-cfg>,infer-alignment,instcombine<max-iterations=1;no-verify-fixpoint>,loop-mssa(licm<allowspeculation>),alignment-from-assumptions,loop-sink,instsimplify,div-rem-pairs,tailcallelim,simplifycfg<bonus-inst-threshold=1;no-forward-switch-cond;switch-range-to-icmp;no-switch-to-lookup;keep-loops;no-hoist-common-insts;hoist-loads-stores-with-cond-faulting;no-sink-common-insts;speculate-blocks;simplify-cond-branch;speculate-unpredictables>)" on module "/var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/btBox2dShape.cpp"
4.	Running pass "slp-vectorizer" on function "_ZNK12btBox2dShape7getAabbERK11btTransformR9btVector3S4_"
Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):
0  clang++   0x000055f3e1ccb4c0 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 240
1  clang++   0x000055f3e1cc9074 llvm::sys::CleanupOnSignal(unsigned long) + 164
2  clang++   0x000055f3e1c1a778
3  libc.so.6 0x00007f50e6c70520
4  clang++   0x000055f3e0e80ed5 llvm::ScalarEvolution::visitAndClearUsers(llvm::SmallVectorImpl<llvm::Instruction*>&, llvm::SmallPtrSetImpl<llvm::Instruction*>&, llvm::SmallVectorImpl<llvm::SCEV const*>&) + 517
5  clang++   0x000055f3e0e985aa llvm::ScalarEvolution::forgetValue(llvm::Value*) + 170
6  clang++   0x000055f3e37921e2
7  clang++   0x000055f3e380cde6 llvm::slpvectorizer::BoUpSLP::vectorizeTree(llvm::SmallDenseSet<llvm::Value*, 4u, llvm::DenseMapInfo<llvm::Value*, void>> const&, llvm::Instruction*, llvm::ArrayRef<std::tuple<llvm::Value*, unsigned int, bool>>) + 7254
8  clang++   0x000055f3e380ff6a llvm::SLPVectorizerPass::tryToVectorizeList(llvm::ArrayRef<llvm::Value*>, llvm::slpvectorizer::BoUpSLP&, bool) + 2602
9  clang++   0x000055f3e38124eb llvm::SLPVectorizerPass::vectorizeInsertElementInst(llvm::InsertElementInst*, llvm::BasicBlock*, llvm::slpvectorizer::BoUpSLP&, bool) + 459
10 clang++   0x000055f3e381ef8d llvm::SLPVectorizerPass::vectorizeInserts(llvm::SmallSetVector<llvm::Instruction*, 8u>&, llvm::BasicBlock*, llvm::slpvectorizer::BoUpSLP&) + 1149
11 clang++   0x000055f3e3821eaf llvm::SLPVectorizerPass::vectorizeChainsInBlock(llvm::BasicBlock*, llvm::slpvectorizer::BoUpSLP&) + 6719
12 clang++   0x000055f3e38243b4
13 clang++   0x000055f3e3824ed7 llvm::SLPVectorizerPass::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) + 503
14 clang++   0x000055f3e2cbd376
15 clang++   0x000055f3e1785417 llvm::PassManager<llvm::Function, llvm::AnalysisManager<llvm::Function>>::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) + 1095
16 clang++   0x000055f3e056bd36
17 clang++   0x000055f3e1787e17 llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) + 1271
18 clang++   0x000055f3e056c926
19 clang++   0x000055f3e17800e7 llvm::PassManager<llvm::Module, llvm::AnalysisManager<llvm::Module>>::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) + 1095
20 clang++   0x000055f3e1f550d3
21 clang++   0x000055f3e1f5929d clang::emitBackendOutput(clang::CompilerInstance&, clang::CodeGenOptions&, llvm::StringRef, llvm::Module*, clang::BackendAction, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::unique_ptr<llvm::raw_pwrite_stream, std::default_delete<llvm::raw_pwrite_stream>>, clang::BackendConsumer*) + 2253
22 clang++   0x000055f3e25d8db7 clang::BackendConsumer::HandleTranslationUnit(clang::ASTContext&) + 1559
23 clang++   0x000055f3e3a403dc clang::ParseAST(clang::Sema&, bool, bool) + 1164
24 clang++   0x000055f3e291b3ce clang::FrontendAction::Execute() + 46
25 clang++   0x000055f3e288c01b clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) + 555
26 clang++   0x000055f3e29f767c clang::ExecuteCompilerInvocation(clang::CompilerInstance*) + 364
27 clang++   0x000055f3e04e587a cc1_main(llvm::ArrayRef<char const*>, char const*, void*) + 7178
28 clang++   0x000055f3e04dd0a2
29 clang++   0x000055f3e264e2cd
30 clang++   0x000055f3e1c1aba7 llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) + 39
31 clang++   0x000055f3e264e667
32 clang++   0x000055f3e26109b1 clang::driver::Compilation::ExecuteCommand(clang::driver::Command const&, clang::driver::Command const*&, bool) const + 177
33 clang++   0x000055f3e2611a29 clang::driver::Compilation::ExecuteJobs(clang::driver::JobList const&, llvm::SmallVectorImpl<std::pair<int, clang::driver::Command const*>>&, bool) const + 153
34 clang++   0x000055f3e262663f clang::driver::Driver::ExecuteCompilation(clang::driver::Compilation&, llvm::SmallVectorImpl<std::pair<int, clang::driver::Command const*>>&) + 543
35 clang++   0x000055f3e04e1bc5 clang_main(int, char**, llvm::ToolContext const&) + 7509
36 clang++   0x000055f3e03e7a8b main + 107
37 libc.so.6 0x00007f50e6c57d90
38 libc.so.6 0x00007f50e6c57e40 __libc_start_main + 128
39 clang++   0x000055f3e04dcb05 _start + 37
clang++: error: clang frontend command failed with exit code 139 (use -v to see invocation)
clang version 21.0.0git
Target: x86_64-unknown-linux-gnu
Thread model: posix
InstalledDir: /tmp/llvm-project-build-stage1/bin
clang++: note: diagnostic msg: 
********************

PLEASE ATTACH THE FOLLOWING FILES TO THE BUG REPORT:
Preprocessed source(s) and associated run script(s) are located at:
clang++: note: diagnostic msg: /tmp/btBox2dShape-a18214.cpp
clang++: note: diagnostic msg: /tmp/btBox2dShape-a18214.sh
clang++: note: diagnostic msg: 

********************
[253/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btConvexHull.cpp.o
FAILED: CTMark/Bullet/CMakeFiles/bullet.dir/btConvexHull.cpp.o 
/tmp/llvm-test-suite-build/tools/timeit --summary CTMark/Bullet/CMakeFiles/bullet.dir/btConvexHull.cpp.o.time /tmp/llvm-project-build-stage1/bin/clang++ -DNDEBUG  -O3 -fomit-frame-pointer -flto -DNDEBUG -g   -w -Werror=date-time -I/var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/include -std=gnu++98 -DNO_TIME -MD -MT CTMark/Bullet/CMakeFiles/bullet.dir/btConvexHull.cpp.o -MF CTMark/Bullet/CMakeFiles/bullet.dir/btConvexHull.cpp.o.d -o CTMark/Bullet/CMakeFiles/bullet.dir/btConvexHull.cpp.o -c /var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/btConvexHull.cpp
PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace, preprocessed source, and associated run script.
Stack dump:
0.	Program arguments: /tmp/llvm-project-build-stage1/bin/clang++ -DNDEBUG -O3 -fomit-frame-pointer -flto -DNDEBUG -g -w -Werror=date-time -I/var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/include -std=gnu++98 -DNO_TIME -MD -MT CTMark/Bullet/CMakeFiles/bullet.dir/btConvexHull.cpp.o -MF CTMark/Bullet/CMakeFiles/bullet.dir/btConvexHull.cpp.o.d -o CTMark/Bullet/CMakeFiles/bullet.dir/btConvexHull.cpp.o -c /var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/btConvexHull.cpp
1.	<eof> parser at end of file
2.	Optimizer
3.	Running pass "function<eager-inv>(float2int,lower-constant-intrinsics,chr,loop(loop-rotate<header-duplication;prepare-for-lto>,loop-deletion),loop-distribute,inject-tli-mappings,loop-vectorize<no-interleave-forced-only;no-vectorize-forced-only;>,infer-alignment,loop-load-elim,instcombine<max-iterations=1;no-verify-fixpoint>,simplifycfg<bonus-inst-threshold=1;forward-switch-cond;switch-range-to-icmp;switch-to-lookup;no-keep-loops;hoist-common-insts;no-hoist-loads-stores-with-cond-faulting;sink-common-insts;speculate-blocks;simplify-cond-branch;no-speculate-unpredictables>,slp-vectorizer,vector-combine,instcombine<max-iterations=1;no-verify-fixpoint>,loop-unroll<O3>,transform-warning,sroa<preserve-cfg>,infer-alignment,instcombine<max-iterations=1;no-verify-fixpoint>,loop-mssa(licm<allowspeculation>),alignment-from-assumptions,loop-sink,instsimplify,div-rem-pairs,tailcallelim,simplifycfg<bonus-inst-threshold=1;no-forward-switch-cond;switch-range-to-icmp;no-switch-to-lookup;keep-loops;no-hoist-common-insts;hoist-loads-stores-with-cond-faulting;no-sink-common-insts;speculate-blocks;simplify-cond-branch;speculate-unpredictables>)" on module "/var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/btConvexHull.cpp"
4.	Running pass "slp-vectorizer" on function "_Z22ThreePlaneIntersectionRK7btPlaneS1_S1_"
Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):
0  clang++   0x000055ad5a9b14c0 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 240
1  clang++   0x000055ad5a9af074 llvm::sys::CleanupOnSignal(unsigned long) + 164
2  clang++   0x000055ad5a900778
3  libc.so.6 0x00007f126b7e9520
4  clang++   0x000055ad59b66ed5 llvm::ScalarEvolution::visitAndClearUsers(llvm::SmallVectorImpl<llvm::Instruction*>&, llvm::SmallPtrSetImpl<llvm::Instruction*>&, llvm::SmallVectorImpl<llvm::SCEV const*>&) + 517
5  clang++   0x000055ad59b7e5aa llvm::ScalarEvolution::forgetValue(llvm::Value*) + 170
6  clang++   0x000055ad5c4781e2
7  clang++   0x000055ad5c4f2de6 llvm::slpvectorizer::BoUpSLP::vectorizeTree(llvm::SmallDenseSet<llvm::Value*, 4u, llvm::DenseMapInfo<llvm::Value*, void>> const&, llvm::Instruction*, llvm::ArrayRef<std::tuple<llvm::Value*, unsigned int, bool>>) + 7254
8  clang++   0x000055ad5c4f5f6a llvm::SLPVectorizerPass::tryToVectorizeList(llvm::ArrayRef<llvm::Value*>, llvm::slpvectorizer::BoUpSLP&, bool) + 2602
9  clang++   0x000055ad5c4f81db llvm::SLPVectorizerPass::vectorizeInsertValueInst(llvm::InsertValueInst*, llvm::BasicBlock*, llvm::slpvectorizer::BoUpSLP&, bool) + 235
10 clang++   0x000055ad5c504cdc llvm::SLPVectorizerPass::vectorizeInserts(llvm::SmallSetVector<llvm::Instruction*, 8u>&, llvm::BasicBlock*, llvm::slpvectorizer::BoUpSLP&) + 460
11 clang++   0x000055ad5c507eaf llvm::SLPVectorizerPass::vectorizeChainsInBlock(llvm::BasicBlock*, llvm::slpvectorizer::BoUpSLP&) + 6719
12 clang++   0x000055ad5c50a3b4
13 clang++   0x000055ad5c50aed7 llvm::SLPVectorizerPass::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) + 503
14 clang++   0x000055ad5b9a3376
15 clang++   0x000055ad5a46b417 llvm::PassManager<llvm::Function, llvm::AnalysisManager<llvm::Function>>::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) + 1095
16 clang++   0x000055ad59251d36
17 clang++   0x000055ad5a46de17 llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) + 1271
18 clang++   0x000055ad59252926
19 clang++   0x000055ad5a4660e7 llvm::PassManager<llvm::Module, llvm::AnalysisManager<llvm::Module>>::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) + 1095
20 clang++   0x000055ad5ac3b0d3
21 clang++   0x000055ad5ac3f29d clang::emitBackendOutput(clang::CompilerInstance&, clang::CodeGenOptions&, llvm::StringRef, llvm::Module*, clang::BackendAction, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::unique_ptr<llvm::raw_pwrite_stream, std::default_delete<llvm::raw_pwrite_stream>>, clang::BackendConsumer*) + 2253
22 clang++   0x000055ad5b2bedb7 clang::BackendConsumer::HandleTranslationUnit(clang::ASTContext&) + 1559
23 clang++   0x000055ad5c7263dc clang::ParseAST(clang::Sema&, bool, bool) + 1164
24 clang++   0x000055ad5b6013ce clang::FrontendAction::Execute() + 46
25 clang++   0x000055ad5b57201b clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) + 555
26 clang++   0x000055ad5b6dd67c clang::ExecuteCompilerInvocation(clang::CompilerInstance*) + 364
27 clang++   0x000055ad591cb87a cc1_main(llvm::ArrayRef<char const*>, char const*, void*) + 7178
28 clang++   0x000055ad591c30a2
29 clang++   0x000055ad5b3342cd
30 clang++   0x000055ad5a900ba7 llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) + 39
31 clang++   0x000055ad5b334667
32 clang++   0x000055ad5b2f69b1 clang::driver::Compilation::ExecuteCommand(clang::driver::Command const&, clang::driver::Command const*&, bool) const + 177
33 clang++   0x000055ad5b2f7a29 clang::driver::Compilation::ExecuteJobs(clang::driver::JobList const&, llvm::SmallVectorImpl<std::pair<int, clang::driver::Command const*>>&, bool) const + 153
34 clang++   0x000055ad5b30c63f clang::driver::Driver::ExecuteCompilation(clang::driver::Compilation&, llvm::SmallVectorImpl<std::pair<int, clang::driver::Command const*>>&) + 543
35 clang++   0x000055ad591c7bc5 clang_main(int, char**, llvm::ToolContext const&) + 7509
36 clang++   0x000055ad590cda8b main + 107
37 libc.so.6 0x00007f126b7d0d90
38 libc.so.6 0x00007f126b7d0e40 __libc_start_main + 128
39 clang++   0x000055ad591c2b05 _start + 37
clang++: error: clang frontend command failed with exit code 139 (use -v to see invocation)
clang version 21.0.0git
Target: x86_64-unknown-linux-gnu
Thread model: posix
InstalledDir: /tmp/llvm-project-build-stage1/bin
clang++: note: diagnostic msg: 
********************

PLEASE ATTACH THE FOLLOWING FILES TO THE BUG REPORT:
Preprocessed source(s) and associated run script(s) are located at:
clang++: note: diagnostic msg: /tmp/btConvexHull-a04199.cpp
clang++: note: diagnostic msg: /tmp/btConvexHull-a04199.sh
clang++: note: diagnostic msg: 

********************
[254/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btAxisSweep3.cpp.o
[255/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/BenchmarkDemo.cpp.o
FAILED: CTMark/Bullet/CMakeFiles/bullet.dir/BenchmarkDemo.cpp.o 
/tmp/llvm-test-suite-build/tools/timeit --summary CTMark/Bullet/CMakeFiles/bullet.dir/BenchmarkDemo.cpp.o.time /tmp/llvm-project-build-stage1/bin/clang++ -DNDEBUG  -O3 -fomit-frame-pointer -flto -DNDEBUG -g   -w -Werror=date-time -I/var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/include -std=gnu++98 -DNO_TIME -MD -MT CTMark/Bullet/CMakeFiles/bullet.dir/BenchmarkDemo.cpp.o -MF CTMark/Bullet/CMakeFiles/bullet.dir/BenchmarkDemo.cpp.o.d -o CTMark/Bullet/CMakeFiles/bullet.dir/BenchmarkDemo.cpp.o -c /var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/BenchmarkDemo.cpp
PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace, preprocessed source, and associated run script.
Stack dump:
0.	Program arguments: /tmp/llvm-project-build-stage1/bin/clang++ -DNDEBUG -O3 -fomit-frame-pointer -flto -DNDEBUG -g -w -Werror=date-time -I/var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/include -std=gnu++98 -DNO_TIME -MD -MT CTMark/Bullet/CMakeFiles/bullet.dir/BenchmarkDemo.cpp.o -MF CTMark/Bullet/CMakeFiles/bullet.dir/BenchmarkDemo.cpp.o.d -o CTMark/Bullet/CMakeFiles/bullet.dir/BenchmarkDemo.cpp.o -c /var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/BenchmarkDemo.cpp
1.	<eof> parser at end of file
2.	Optimizer
3.	Running pass "function<eager-inv>(float2int,lower-constant-intrinsics,chr,loop(loop-rotate<header-duplication;prepare-for-lto>,loop-deletion),loop-distribute,inject-tli-mappings,loop-vectorize<no-interleave-forced-only;no-vectorize-forced-only;>,infer-alignment,loop-load-elim,instcombine<max-iterations=1;no-verify-fixpoint>,simplifycfg<bonus-inst-threshold=1;forward-switch-cond;switch-range-to-icmp;switch-to-lookup;no-keep-loops;hoist-common-insts;no-hoist-loads-stores-with-cond-faulting;sink-common-insts;speculate-blocks;simplify-cond-branch;no-speculate-unpredictables>,slp-vectorizer,vector-combine,instcombine<max-iterations=1;no-verify-fixpoint>,loop-unroll<O3>,transform-warning,sroa<preserve-cfg>,infer-alignment,instcombine<max-iterations=1;no-verify-fixpoint>,loop-mssa(licm<allowspeculation>),alignment-from-assumptions,loop-sink,instsimplify,div-rem-pairs,tailcallelim,simplifycfg<bonus-inst-threshold=1;no-forward-switch-cond;switch-range-to-icmp;no-switch-to-lookup;keep-loops;no-hoist-common-insts;hoist-loads-stores-with-cond-faulting;no-sink-common-insts;speculate-blocks;simplify-cond-branch;speculate-unpredictables>)" on module "/var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/BenchmarkDemo.cpp"
4.	Running pass "slp-vectorizer" on function "_ZN13BenchmarkDemo13createPyramidERK9btVector3iS2_"
Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):
0  clang++   0x0000561dcb1284c0 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 240
1  clang++   0x0000561dcb126074 llvm::sys::CleanupOnSignal(unsigned long) + 164
2  clang++   0x0000561dcb077778
3  libc.so.6 0x00007f46dc4ea520
4  clang++   0x0000561dca2dded5 llvm::ScalarEvolution::visitAndClearUsers(llvm::SmallVectorImpl<llvm::Instruction*>&, llvm::SmallPtrSetImpl<llvm::Instruction*>&, llvm::SmallVectorImpl<llvm::SCEV const*>&) + 517
5  clang++   0x0000561dca2f55aa llvm::ScalarEvolution::forgetValue(llvm::Value*) + 170
6  clang++   0x0000561dccbef1e2
7  clang++   0x0000561dccc69de6 llvm::slpvectorizer::BoUpSLP::vectorizeTree(llvm::SmallDenseSet<llvm::Value*, 4u, llvm::DenseMapInfo<llvm::Value*, void>> const&, llvm::Instruction*, llvm::ArrayRef<std::tuple<llvm::Value*, unsigned int, bool>>) + 7254
8  clang++   0x0000561dccc6cf6a llvm::SLPVectorizerPass::tryToVectorizeList(llvm::ArrayRef<llvm::Value*>, llvm::slpvectorizer::BoUpSLP&, bool) + 2602
9  clang++   0x0000561dccc6fa66
10 clang++   0x0000561dccc7da71 llvm::SLPVectorizerPass::vectorizeChainsInBlock(llvm::BasicBlock*, llvm::slpvectorizer::BoUpSLP&) + 1537
11 clang++   0x0000561dccc813b4
12 clang++   0x0000561dccc81ed7 llvm::SLPVectorizerPass::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) + 503
13 clang++   0x0000561dcc11a376
14 clang++   0x0000561dcabe2417 llvm::PassManager<llvm::Function, llvm::AnalysisManager<llvm::Function>>::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) + 1095
15 clang++   0x0000561dc99c8d36
16 clang++   0x0000561dcabe4e17 llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) + 1271
17 clang++   0x0000561dc99c9926
18 clang++   0x0000561dcabdd0e7 llvm::PassManager<llvm::Module, llvm::AnalysisManager<llvm::Module>>::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) + 1095
19 clang++   0x0000561dcb3b20d3
20 clang++   0x0000561dcb3b629d clang::emitBackendOutput(clang::CompilerInstance&, clang::CodeGenOptions&, llvm::StringRef, llvm::Module*, clang::BackendAction, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::unique_ptr<llvm::raw_pwrite_stream, std::default_delete<llvm::raw_pwrite_stream>>, clang::BackendConsumer*) + 2253
21 clang++   0x0000561dcba35db7 clang::BackendConsumer::HandleTranslationUnit(clang::ASTContext&) + 1559
22 clang++   0x0000561dcce9d3dc clang::ParseAST(clang::Sema&, bool, bool) + 1164
23 clang++   0x0000561dcbd783ce clang::FrontendAction::Execute() + 46
24 clang++   0x0000561dcbce901b clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) + 555
25 clang++   0x0000561dcbe5467c clang::ExecuteCompilerInvocation(clang::CompilerInstance*) + 364
26 clang++   0x0000561dc994287a cc1_main(llvm::ArrayRef<char const*>, char const*, void*) + 7178
27 clang++   0x0000561dc993a0a2
28 clang++   0x0000561dcbaab2cd
29 clang++   0x0000561dcb077ba7 llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) + 39
30 clang++   0x0000561dcbaab667
31 clang++   0x0000561dcba6d9b1 clang::driver::Compilation::ExecuteCommand(clang::driver::Command const&, clang::driver::Command const*&, bool) const + 177
32 clang++   0x0000561dcba6ea29 clang::driver::Compilation::ExecuteJobs(clang::driver::JobList const&, llvm::SmallVectorImpl<std::pair<int, clang::driver::Command const*>>&, bool) const + 153
33 clang++   0x0000561dcba8363f clang::driver::Driver::ExecuteCompilation(clang::driver::Compilation&, llvm::SmallVectorImpl<std::pair<int, clang::driver::Command const*>>&) + 543
34 clang++   0x0000561dc993ebc5 clang_main(int, char**, llvm::ToolContext const&) + 7509
35 clang++   0x0000561dc9844a8b main + 107
36 libc.so.6 0x00007f46dc4d1d90
37 libc.so.6 0x00007f46dc4d1e40 __libc_start_main + 128
38 clang++   0x0000561dc9939b05 _start + 37
clang++: error: clang frontend command failed with exit code 139 (use -v to see invocation)
clang version 21.0.0git
Target: x86_64-unknown-linux-gnu
Thread model: posix
InstalledDir: /tmp/llvm-project-build-stage1/bin
clang++: note: diagnostic msg: 
********************

PLEASE ATTACH THE FOLLOWING FILES TO THE BUG REPORT:
Preprocessed source(s) and associated run script(s) are located at:
clang++: note: diagnostic msg: /tmp/BenchmarkDemo-7d842f.cpp
clang++: note: diagnostic msg: /tmp/BenchmarkDemo-7d842f.sh
clang++: note: diagnostic msg: 

********************
ninja: build stopped: subcommand failed.


STDERR:
MESSAGE: Execution of "sudo -u lctt-runner ./build_llvm_test_suite.sh O3 stage1 aarch64" failed

STDOUT:
FAILED: CTMark/Bullet/CMakeFiles/bullet.dir/SphereTriangleDetector.cpp.o 
/tmp/llvm-test-suite-build/tools/timeit --summary CTMark/Bullet/CMakeFiles/bullet.dir/SphereTriangleDetector.cpp.o.time /tmp/llvm-project-build-stage1/bin/clang++ --target=aarch64-linux-gnu -DNDEBUG  -O3   -w -Werror=date-time -I/var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/include -std=gnu++98 -DNO_TIME -MD -MT CTMark/Bullet/CMakeFiles/bullet.dir/SphereTriangleDetector.cpp.o -MF CTMark/Bullet/CMakeFiles/bullet.dir/SphereTriangleDetector.cpp.o.d -o CTMark/Bullet/CMakeFiles/bullet.dir/SphereTriangleDetector.cpp.o -c /var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/SphereTriangleDetector.cpp
PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace, preprocessed source, and associated run script.
Stack dump:
0.	Program arguments: /tmp/llvm-project-build-stage1/bin/clang++ --target=aarch64-linux-gnu -DNDEBUG -O3 -w -Werror=date-time -I/var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/include -std=gnu++98 -DNO_TIME -MD -MT CTMark/Bullet/CMakeFiles/bullet.dir/SphereTriangleDetector.cpp.o -MF CTMark/Bullet/CMakeFiles/bullet.dir/SphereTriangleDetector.cpp.o.d -o CTMark/Bullet/CMakeFiles/bullet.dir/SphereTriangleDetector.cpp.o -c /var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/SphereTriangleDetector.cpp
1.	<eof> parser at end of file
2.	Optimizer
3.	Running pass "function<eager-inv>(float2int,lower-constant-intrinsics,chr,loop(loop-rotate<header-duplication;no-prepare-for-lto>,loop-deletion),loop-distribute,inject-tli-mappings,loop-vectorize<no-interleave-forced-only;no-vectorize-forced-only;>,infer-alignment,loop-load-elim,instcombine<max-iterations=1;no-verify-fixpoint>,simplifycfg<bonus-inst-threshold=1;forward-switch-cond;switch-range-to-icmp;switch-to-lookup;no-keep-loops;hoist-common-insts;no-hoist-loads-stores-with-cond-faulting;sink-common-insts;speculate-blocks;simplify-cond-branch;no-speculate-unpredictables>,slp-vectorizer,vector-combine,instcombine<max-iterations=1;no-verify-fixpoint>,loop-unroll<O3>,transform-warning,sroa<preserve-cfg>,infer-alignment,instcombine<max-iterations=1;no-verify-fixpoint>,loop-mssa(licm<allowspeculation>),alignment-from-assumptions,loop-sink,instsimplify,div-rem-pairs,tailcallelim,simplifycfg<bonus-inst-threshold=1;no-forward-switch-cond;switch-range-to-icmp;no-switch-to-lookup;keep-loops;no-hoist-common-insts;hoist-loads-stores-with-cond-faulting;no-sink-common-insts;speculate-blocks;simplify-cond-branch;speculate-unpredictables>)" on module "/var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/SphereTriangleDetector.cpp"
4.	Running pass "slp-vectorizer" on function "_ZN22SphereTriangleDetector16getClosestPointsERKN36btDiscreteCollisionDetectorInterface17ClosestPointInputERNS0_6ResultEP12btIDebugDrawb"
Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):
0  clang++   0x00005616919aa4c0 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 240
1  clang++   0x00005616919a8074 llvm::sys::CleanupOnSignal(unsigned long) + 164
2  clang++   0x00005616918f9778
3  libc.so.6 0x00007f5b5b9ef520
4  clang++   0x0000561690b5fed5 llvm::ScalarEvolution::visitAndClearUsers(llvm::SmallVectorImpl<llvm::Instruction*>&, llvm::SmallPtrSetImpl<llvm::Instruction*>&, llvm::SmallVectorImpl<llvm::SCEV const*>&) + 517
5  clang++   0x0000561690b775aa llvm::ScalarEvolution::forgetValue(llvm::Value*) + 170
6  clang++   0x00005616934711e2
7  clang++   0x00005616934ebde6 llvm::slpvectorizer::BoUpSLP::vectorizeTree(llvm::SmallDenseSet<llvm::Value*, 4u, llvm::DenseMapInfo<llvm::Value*, void>> const&, llvm::Instruction*, llvm::ArrayRef<std::tuple<llvm::Value*, unsigned int, bool>>) + 7254
8  clang++   0x00005616934f4bb8
9  clang++   0x00005616934f6630 llvm::SLPVectorizerPass::vectorizeStores(llvm::ArrayRef<llvm::StoreInst*>, llvm::slpvectorizer::BoUpSLP&, llvm::DenseSet<std::tuple<llvm::Value*, llvm::Value*, llvm::Value*, llvm::Value*, unsigned int>, llvm::DenseMapInfo<std::tuple<llvm::Value*, llvm::Value*, llvm::Value*, llvm::Value*, unsigned int>, void>>&) + 2448
10 clang++   0x00005616934f6e6a llvm::SLPVectorizerPass::vectorizeStoreChains(llvm::slpvectorizer::BoUpSLP&) + 1082
11 clang++   0x00005616935037d7
12 clang++   0x0000561693503ed7 llvm::SLPVectorizerPass::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) + 503
13 clang++   0x000056169299c376
14 clang++   0x0000561691464417 llvm::PassManager<llvm::Function, llvm::AnalysisManager<llvm::Function>>::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) + 1095
15 clang++   0x000056169024ad36
16 clang++   0x0000561691466e17 llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) + 1271
17 clang++   0x000056169024b926
18 clang++   0x000056169145f0e7 llvm::PassManager<llvm::Module, llvm::AnalysisManager<llvm::Module>>::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) + 1095
19 clang++   0x0000561691c340d3
20 clang++   0x0000561691c3829d clang::emitBackendOutput(clang::CompilerInstance&, clang::CodeGenOptions&, llvm::StringRef, llvm::Module*, clang::BackendAction, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::unique_ptr<llvm::raw_pwrite_stream, std::default_delete<llvm::raw_pwrite_stream>>, clang::BackendConsumer*) + 2253
21 clang++   0x00005616922b7db7 clang::BackendConsumer::HandleTranslationUnit(clang::ASTContext&) + 1559
22 clang++   0x000056169371f3dc clang::ParseAST(clang::Sema&, bool, bool) + 1164
23 clang++   0x00005616925fa3ce clang::FrontendAction::Execute() + 46
24 clang++   0x000056169256b01b clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) + 555
25 clang++   0x00005616926d667c clang::ExecuteCompilerInvocation(clang::CompilerInstance*) + 364
26 clang++   0x00005616901c487a cc1_main(llvm::ArrayRef<char const*>, char const*, void*) + 7178
27 clang++   0x00005616901bc0a2
28 clang++   0x000056169232d2cd
29 clang++   0x00005616918f9ba7 llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) + 39
30 clang++   0x000056169232d667
31 clang++   0x00005616922ef9b1 clang::driver::Compilation::ExecuteCommand(clang::driver::Command const&, clang::driver::Command const*&, bool) const + 177
32 clang++   0x00005616922f0a29 clang::driver::Compilation::ExecuteJobs(clang::driver::JobList const&, llvm::SmallVectorImpl<std::pair<int, clang::driver::Command const*>>&, bool) const + 153
33 clang++   0x000056169230563f clang::driver::Driver::ExecuteCompilation(clang::driver::Compilation&, llvm::SmallVectorImpl<std::pair<int, clang::driver::Command const*>>&) + 543
34 clang++   0x00005616901c0bc5 clang_main(int, char**, llvm::ToolContext const&) + 7509
35 clang++   0x00005616900c6a8b main + 107
36 libc.so.6 0x00007f5b5b9d6d90
37 libc.so.6 0x00007f5b5b9d6e40 __libc_start_main + 128
38 clang++   0x00005616901bbb05 _start + 37
clang++: error: clang frontend command failed with exit code 139 (use -v to see invocation)
clang version 21.0.0git
Target: aarch64-unknown-linux-gnu
Thread model: posix
InstalledDir: /tmp/llvm-project-build-stage1/bin
clang++: note: diagnostic msg: 
********************

PLEASE ATTACH THE FOLLOWING FILES TO THE BUG REPORT:
Preprocessed source(s) and associated run script(s) are located at:
clang++: note: diagnostic msg: /tmp/SphereTriangleDetector-ee3fe6.cpp
clang++: note: diagnostic msg: /tmp/SphereTriangleDetector-ee3fe6.sh
clang++: note: diagnostic msg: 

********************
[249/671] Building C object CTMark/ClamAV/CMakeFiles/clamscan.dir/libclamav_mbox.c.o
[250/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dBox2dCollisionAlgorithm.cpp.o
[251/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dShape.cpp.o
FAILED: CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dShape.cpp.o 
/tmp/llvm-test-suite-build/tools/timeit --summary CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dShape.cpp.o.time /tmp/llvm-project-build-stage1/bin/clang++ --target=aarch64-linux-gnu -DNDEBUG  -O3   -w -Werror=date-time -I/var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/include -std=gnu++98 -DNO_TIME -MD -MT CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dShape.cpp.o -MF CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dShape.cpp.o.d -o CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dShape.cpp.o -c /var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/btBox2dShape.cpp
PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace, preprocessed source, and associated run script.
Stack dump:
0.	Program arguments: /tmp/llvm-project-build-stage1/bin/clang++ --target=aarch64-linux-gnu -DNDEBUG -O3 -w -Werror=date-time -I/var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/include -std=gnu++98 -DNO_TIME -MD -MT CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dShape.cpp.o -MF CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dShape.cpp.o.d -o CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dShape.cpp.o -c /var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/btBox2dShape.cpp
1.	<eof> parser at end of file
2.	Optimizer
3.	Running pass "function<eager-inv>(float2int,lower-constant-intrinsics,chr,loop(loop-rotate<header-duplication;no-prepare-for-lto>,loop-deletion),loop-distribute,inject-tli-mappings,loop-vectorize<no-interleave-forced-only;no-vectorize-forced-only;>,infer-alignment,loop-load-elim,instcombine<max-iterations=1;no-verify-fixpoint>,simplifycfg<bonus-inst-threshold=1;forward-switch-cond;switch-range-to-icmp;switch-to-lookup;no-keep-loops;hoist-common-insts;no-hoist-loads-stores-with-cond-faulting;sink-common-insts;speculate-blocks;simplify-cond-branch;no-speculate-unpredictables>,slp-vectorizer,vector-combine,instcombine<max-iterations=1;no-verify-fixpoint>,loop-unroll<O3>,transform-warning,sroa<preserve-cfg>,infer-alignment,instcombine<max-iterations=1;no-verify-fixpoint>,loop-mssa(licm<allowspeculation>),alignment-from-assumptions,loop-sink,instsimplify,div-rem-pairs,tailcallelim,simplifycfg<bonus-inst-threshold=1;no-forward-switch-cond;switch-range-to-icmp;no-switch-to-lookup;keep-loops;no-hoist-common-insts;hoist-loads-stores-with-cond-faulting;no-sink-common-insts;speculate-blocks;simplify-cond-branch;speculate-unpredictables>)" on module "/var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/btBox2dShape.cpp"
4.	Running pass "slp-vectorizer" on function "_ZNK12btBox2dShape7getAabbERK11btTransformR9btVector3S4_"
Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):
0  clang++   0x00005587167af4c0 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 240
1  clang++   0x00005587167ad074 llvm::sys::CleanupOnSignal(unsigned long) + 164
2  clang++   0x00005587166fe778
3  libc.so.6 0x00007fb65f59a520
4  clang++   0x0000558715964ed5 llvm::ScalarEvolution::visitAndClearUsers(llvm::SmallVectorImpl<llvm::Instruction*>&, llvm::SmallPtrSetImpl<llvm::Instruction*>&, llvm::SmallVectorImpl<llvm::SCEV const*>&) + 517
5  clang++   0x000055871597c5aa llvm::ScalarEvolution::forgetValue(llvm::Value*) + 170
6  clang++   0x00005587182761e2
7  clang++   0x00005587182f0de6 llvm::slpvectorizer::BoUpSLP::vectorizeTree(llvm::SmallDenseSet<llvm::Value*, 4u, llvm::DenseMapInfo<llvm::Value*, void>> const&, llvm::Instruction*, llvm::ArrayRef<std::tuple<llvm::Value*, unsigned int, bool>>) + 7254
8  clang++   0x00005587182f9bb8
9  clang++   0x00005587182fb630 llvm::SLPVectorizerPass::vectorizeStores(llvm::ArrayRef<llvm::StoreInst*>, llvm::slpvectorizer::BoUpSLP&, llvm::DenseSet<std::tuple<llvm::Value*, llvm::Value*, llvm::Value*, llvm::Value*, unsigned int>, llvm::DenseMapInfo<std::tuple<llvm::Value*, llvm::Value*, llvm::Value*, llvm::Value*, unsigned int>, void>>&) + 2448
10 clang++   0x00005587182fbe6a llvm::SLPVectorizerPass::vectorizeStoreChains(llvm::slpvectorizer::BoUpSLP&) + 1082
11 clang++   0x00005587183087d7
12 clang++   0x0000558718308ed7 llvm::SLPVectorizerPass::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) + 503
13 clang++   0x00005587177a1376
14 clang++   0x0000558716269417 llvm::PassManager<llvm::Function, llvm::AnalysisManager<llvm::Function>>::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) + 1095
15 clang++   0x000055871504fd36
16 clang++   0x000055871626be17 llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) + 1271
17 clang++   0x0000558715050926
18 clang++   0x00005587162640e7 llvm::PassManager<llvm::Module, llvm::AnalysisManager<llvm::Module>>::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) + 1095
19 clang++   0x0000558716a390d3
20 clang++   0x0000558716a3d29d clang::emitBackendOutput(clang::CompilerInstance&, clang::CodeGenOptions&, llvm::StringRef, llvm::Module*, clang::BackendAction, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::unique_ptr<llvm::raw_pwrite_stream, std::default_delete<llvm::raw_pwrite_stream>>, clang::BackendConsumer*) + 2253
21 clang++   0x00005587170bcdb7 clang::BackendConsumer::HandleTranslationUnit(clang::ASTContext&) + 1559
22 clang++   0x00005587185243dc clang::ParseAST(clang::Sema&, bool, bool) + 1164
23 clang++   0x00005587173ff3ce clang::FrontendAction::Execute() + 46
24 clang++   0x000055871737001b clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) + 555
25 clang++   0x00005587174db67c clang::ExecuteCompilerInvocation(clang::CompilerInstance*) + 364
26 clang++   0x0000558714fc987a cc1_main(llvm::ArrayRef<char const*>, char const*, void*) + 7178
27 clang++   0x0000558714fc10a2
28 clang++   0x00005587171322cd
29 clang++   0x00005587166feba7 llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) + 39
30 clang++   0x0000558717132667
31 clang++   0x00005587170f49b1 clang::driver::Compilation::ExecuteCommand(clang::driver::Command const&, clang::driver::Command const*&, bool) const + 177
32 clang++   0x00005587170f5a29 clang::driver::Compilation::ExecuteJobs(clang::driver::JobList const&, llvm::SmallVectorImpl<std::pair<int, clang::driver::Command const*>>&, bool) const + 153
33 clang++   0x000055871710a63f clang::driver::Driver::ExecuteCompilation(clang::driver::Compilation&, llvm::SmallVectorImpl<std::pair<int, clang::driver::Command const*>>&) + 543
34 clang++   0x0000558714fc5bc5 clang_main(int, char**, llvm::ToolContext const&) + 7509
35 clang++   0x0000558714ecba8b main + 107
36 libc.so.6 0x00007fb65f581d90
37 libc.so.6 0x00007fb65f581e40 __libc_start_main + 128
38 clang++   0x0000558714fc0b05 _start + 37
clang++: error: clang frontend command failed with exit code 139 (use -v to see invocation)
clang version 21.0.0git
Target: aarch64-unknown-linux-gnu
Thread model: posix
InstalledDir: /tmp/llvm-project-build-stage1/bin
clang++: note: diagnostic msg: 
********************

PLEASE ATTACH THE FOLLOWING FILES TO THE BUG REPORT:
Preprocessed source(s) and associated run script(s) are located at:
clang++: note: diagnostic msg: /tmp/btBox2dShape-67f43e.cpp
clang++: note: diagnostic msg: /tmp/btBox2dShape-67f43e.sh
clang++: note: diagnostic msg: 

********************
[252/671] Building C object CTMark/7zip/CMakeFiles/7zip-benchmark.dir/C/LzmaEnc.c.o
[253/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btAxisSweep3.cpp.o
[254/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/BenchmarkDemo.cpp.o
FAILED: CTMark/Bullet/CMakeFiles/bullet.dir/BenchmarkDemo.cpp.o 
/tmp/llvm-test-suite-build/tools/timeit --summary CTMark/Bullet/CMakeFiles/bullet.dir/BenchmarkDemo.cpp.o.time /tmp/llvm-project-build-stage1/bin/clang++ --target=aarch64-linux-gnu -DNDEBUG  -O3   -w -Werror=date-time -I/var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/include -std=gnu++98 -DNO_TIME -MD -MT CTMark/Bullet/CMakeFiles/bullet.dir/BenchmarkDemo.cpp.o -MF CTMark/Bullet/CMakeFiles/bullet.dir/BenchmarkDemo.cpp.o.d -o CTMark/Bullet/CMakeFiles/bullet.dir/BenchmarkDemo.cpp.o -c /var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/BenchmarkDemo.cpp
PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace, preprocessed source, and associated run script.
Stack dump:
0.	Program arguments: /tmp/llvm-project-build-stage1/bin/clang++ --target=aarch64-linux-gnu -DNDEBUG -O3 -w -Werror=date-time -I/var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/include -std=gnu++98 -DNO_TIME -MD -MT CTMark/Bullet/CMakeFiles/bullet.dir/BenchmarkDemo.cpp.o -MF CTMark/Bullet/CMakeFiles/bullet.dir/BenchmarkDemo.cpp.o.d -o CTMark/Bullet/CMakeFiles/bullet.dir/BenchmarkDemo.cpp.o -c /var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/BenchmarkDemo.cpp
1.	<eof> parser at end of file
2.	Optimizer
3.	Running pass "function<eager-inv>(float2int,lower-constant-intrinsics,chr,loop(loop-rotate<header-duplication;no-prepare-for-lto>,loop-deletion),loop-distribute,inject-tli-mappings,loop-vectorize<no-interleave-forced-only;no-vectorize-forced-only;>,infer-alignment,loop-load-elim,instcombine<max-iterations=1;no-verify-fixpoint>,simplifycfg<bonus-inst-threshold=1;forward-switch-cond;switch-range-to-icmp;switch-to-lookup;no-keep-loops;hoist-common-insts;no-hoist-loads-stores-with-cond-faulting;sink-common-insts;speculate-blocks;simplify-cond-branch;no-speculate-unpredictables>,slp-vectorizer,vector-combine,instcombine<max-iterations=1;no-verify-fixpoint>,loop-unroll<O3>,transform-warning,sroa<preserve-cfg>,infer-alignment,instcombine<max-iterations=1;no-verify-fixpoint>,loop-mssa(licm<allowspeculation>),alignment-from-assumptions,loop-sink,instsimplify,div-rem-pairs,tailcallelim,simplifycfg<bonus-inst-threshold=1;no-forward-switch-cond;switch-range-to-icmp;no-switch-to-lookup;keep-loops;no-hoist-common-insts;hoist-loads-stores-with-cond-faulting;no-sink-common-insts;speculate-blocks;simplify-cond-branch;speculate-unpredictables>)" on module "/var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/BenchmarkDemo.cpp"
4.	Running pass "slp-vectorizer" on function "_ZNK20btDefaultMotionState17getWorldTransformER11btTransform"
Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):
0  clang++   0x00005578e4c6e4c0 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 240
1  clang++   0x00005578e4c6c074 llvm::sys::CleanupOnSignal(unsigned long) + 164
2  clang++   0x00005578e4bbd778
3  libc.so.6 0x00007f4478cfc520
4  clang++   0x00005578e3e23ed5 llvm::ScalarEvolution::visitAndClearUsers(llvm::SmallVectorImpl<llvm::Instruction*>&, llvm::SmallPtrSetImpl<llvm::Instruction*>&, llvm::SmallVectorImpl<llvm::SCEV const*>&) + 517
5  clang++   0x00005578e3e3b5aa llvm::ScalarEvolution::forgetValue(llvm::Value*) + 170
6  clang++   0x00005578e67351e2
7  clang++   0x00005578e67afde6 llvm::slpvectorizer::BoUpSLP::vectorizeTree(llvm::SmallDenseSet<llvm::Value*, 4u, llvm::DenseMapInfo<llvm::Value*, void>> const&, llvm::Instruction*, llvm::ArrayRef<std::tuple<llvm::Value*, unsigned int, bool>>) + 7254
8  clang++   0x00005578e67b8bb8
9  clang++   0x00005578e67ba630 llvm::SLPVectorizerPass::vectorizeStores(llvm::ArrayRef<llvm::StoreInst*>, llvm::slpvectorizer::BoUpSLP&, llvm::DenseSet<std::tuple<llvm::Value*, llvm::Value*, llvm::Value*, llvm::Value*, unsigned int>, llvm::DenseMapInfo<std::tuple<llvm::Value*, llvm::Value*, llvm::Value*, llvm::Value*, unsigned int>, void>>&) + 2448
10 clang++   0x00005578e67bae6a llvm::SLPVectorizerPass::vectorizeStoreChains(llvm::slpvectorizer::BoUpSLP&) + 1082
11 clang++   0x00005578e67c77d7
12 clang++   0x00005578e67c7ed7 llvm::SLPVectorizerPass::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) + 503
13 clang++   0x00005578e5c60376
14 clang++   0x00005578e4728417 llvm::PassManager<llvm::Function, llvm::AnalysisManager<llvm::Function>>::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) + 1095
15 clang++   0x00005578e350ed36
16 clang++   0x00005578e472ae17 llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) + 1271
17 clang++   0x00005578e350f926
18 clang++   0x00005578e47230e7 llvm::PassManager<llvm::Module, llvm::AnalysisManager<llvm::Module>>::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) + 1095
19 clang++   0x00005578e4ef80d3
20 clang++   0x00005578e4efc29d clang::emitBackendOutput(clang::CompilerInstance&, clang::CodeGenOptions&, llvm::StringRef, llvm::Module*, clang::BackendAction, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::unique_ptr<llvm::raw_pwrite_stream, std::default_delete<llvm::raw_pwrite_stream>>, clang::BackendConsumer*) + 2253
21 clang++   0x00005578e557bdb7 clang::BackendConsumer::HandleTranslationUnit(clang::ASTContext&) + 1559
22 clang++   0x00005578e69e33dc clang::ParseAST(clang::Sema&, bool, bool) + 1164
23 clang++   0x00005578e58be3ce clang::FrontendAction::Execute() + 46
24 clang++   0x00005578e582f01b clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) + 555
25 clang++   0x00005578e599a67c clang::ExecuteCompilerInvocation(clang::CompilerInstance*) + 364
26 clang++   0x00005578e348887a cc1_main(llvm::ArrayRef<char const*>, char const*, void*) + 7178
27 clang++   0x00005578e34800a2
28 clang++   0x00005578e55f12cd
29 clang++   0x00005578e4bbdba7 llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) + 39
30 clang++   0x00005578e55f1667
31 clang++   0x00005578e55b39b1 clang::driver::Compilation::ExecuteCommand(clang::driver::Command const&, clang::driver::Command const*&, bool) const + 177
32 clang++   0x00005578e55b4a29 clang::driver::Compilation::ExecuteJobs(clang::driver::JobList const&, llvm::SmallVectorImpl<std::pair<int, clang::driver::Command const*>>&, bool) const + 153
33 clang++   0x00005578e55c963f clang::driver::Driver::ExecuteCompilation(clang::driver::Compilation&, llvm::SmallVectorImpl<std::pair<int, clang::driver::Command const*>>&) + 543
34 clang++   0x00005578e3484bc5 clang_main(int, char**, llvm::ToolContext const&) + 7509
35 clang++   0x00005578e338aa8b main + 107
36 libc.so.6 0x00007f4478ce3d90
37 libc.so.6 0x00007f4478ce3e40 __libc_start_main + 128
38 clang++   0x00005578e347fb05 _start + 37
clang++: error: clang frontend command failed with exit code 139 (use -v to see invocation)
clang version 21.0.0git
Target: aarch64-unknown-linux-gnu
Thread model: posix
InstalledDir: /tmp/llvm-project-build-stage1/bin
clang++: note: diagnostic msg: 
********************

PLEASE ATTACH THE FOLLOWING FILES TO THE BUG REPORT:
Preprocessed source(s) and associated run script(s) are located at:
clang++: note: diagnostic msg: /tmp/BenchmarkDemo-c72e83.cpp
clang++: note: diagnostic msg: /tmp/BenchmarkDemo-c72e83.sh
clang++: note: diagnostic msg: 

********************
ninja: build stopped: subcommand failed.


STDERR:
MESSAGE: Execution of "sudo -u lctt-runner ./build_llvm_test_suite.sh O3 stage2 " failed

STDOUT:
[250/671] Building C object CTMark/7zip/CMakeFiles/7zip-benchmark.dir/C/LzmaEnc.c.o
[251/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dBox2dCollisionAlgorithm.cpp.o
FAILED: CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dBox2dCollisionAlgorithm.cpp.o 
/tmp/llvm-test-suite-build/tools/timeit --summary CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dBox2dCollisionAlgorithm.cpp.o.time /tmp/llvm-project-build-stage2/bin/clang++ -DNDEBUG  -O3   -w -Werror=date-time -I/var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/include -std=gnu++98 -DNO_TIME -MD -MT CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dBox2dCollisionAlgorithm.cpp.o -MF CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dBox2dCollisionAlgorithm.cpp.o.d -o CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dBox2dCollisionAlgorithm.cpp.o -c /var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/btBox2dBox2dCollisionAlgorithm.cpp
PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace, preprocessed source, and associated run script.
Stack dump:
0.	Program arguments: /tmp/llvm-project-build-stage2/bin/clang++ -DNDEBUG -O3 -w -Werror=date-time -I/var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/include -std=gnu++98 -DNO_TIME -MD -MT CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dBox2dCollisionAlgorithm.cpp.o -MF CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dBox2dCollisionAlgorithm.cpp.o.d -o CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dBox2dCollisionAlgorithm.cpp.o -c /var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/btBox2dBox2dCollisionAlgorithm.cpp
1.	<eof> parser at end of file
2.	Optimizer
3.	Running pass "function<eager-inv>(float2int,lower-constant-intrinsics,chr,loop(loop-rotate<header-duplication;no-prepare-for-lto>,loop-deletion),loop-distribute,inject-tli-mappings,loop-vectorize<no-interleave-forced-only;no-vectorize-forced-only;>,infer-alignment,loop-load-elim,instcombine<max-iterations=1;no-verify-fixpoint>,simplifycfg<bonus-inst-threshold=1;forward-switch-cond;switch-range-to-icmp;switch-to-lookup;no-keep-loops;hoist-common-insts;no-hoist-loads-stores-with-cond-faulting;sink-common-insts;speculate-blocks;simplify-cond-branch;no-speculate-unpredictables>,slp-vectorizer,vector-combine,instcombine<max-iterations=1;no-verify-fixpoint>,loop-unroll<O3>,transform-warning,sroa<preserve-cfg>,infer-alignment,instcombine<max-iterations=1;no-verify-fixpoint>,loop-mssa(licm<allowspeculation>),alignment-from-assumptions,loop-sink,instsimplify,div-rem-pairs,tailcallelim,simplifycfg<bonus-inst-threshold=1;no-forward-switch-cond;switch-range-to-icmp;no-switch-to-lookup;keep-loops;no-hoist-common-insts;hoist-loads-stores-with-cond-faulting;no-sink-common-insts;speculate-blocks;simplify-cond-branch;speculate-unpredictables>)" on module "/var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/btBox2dBox2dCollisionAlgorithm.cpp"
4.	Running pass "slp-vectorizer" on function "_Z17b2CollidePolygonsP16btManifoldResultPK12btBox2dShapeRK11btTransformS3_S6_"
Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):
0  clang++   0x000055f52462ed38 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 40
1  clang++   0x000055f52462bcb5 llvm::sys::RunSignalHandlers() + 293
2  clang++   0x000055f524590dc7
3  libc.so.6 0x00007f9de921d520
4  clang++   0x000055f5238bc07e llvm::ScalarEvolution::visitAndClearUsers(llvm::SmallVectorImpl<llvm::Instruction*>&, llvm::SmallPtrSetImpl<llvm::Instruction*>&, llvm::SmallVectorImpl<llvm::SCEV const*>&) + 238
5  clang++   0x000055f5238bcf6d llvm::ScalarEvolution::forgetValue(llvm::Value*) + 157
6  clang++   0x000055f525eb4870 llvm::slpvectorizer::BoUpSLP::vectorizeTree(llvm::SmallDenseSet<llvm::Value*, 4u, llvm::DenseMapInfo<llvm::Value*, void>> const&, llvm::Instruction*, llvm::ArrayRef<std::tuple<llvm::Value*, unsigned int, bool>>) + 43296
7  clang++   0x000055f525ecde33 llvm::SLPVectorizerPass::tryToVectorizeList(llvm::ArrayRef<llvm::Value*>, llvm::slpvectorizer::BoUpSLP&, bool) + 4083
8  clang++   0x000055f525ed4bb4 llvm::SLPVectorizerPass::vectorizeInsertElementInst(llvm::InsertElementInst*, llvm::BasicBlock*, llvm::slpvectorizer::BoUpSLP&, bool) + 708
9  clang++   0x000055f525ed521a llvm::SLPVectorizerPass::vectorizeInserts(llvm::SmallSetVector<llvm::Instruction*, 8u>&, llvm::BasicBlock*, llvm::slpvectorizer::BoUpSLP&) + 490
10 clang++   0x000055f525ed5d92
11 clang++   0x000055f525ec6fee llvm::SLPVectorizerPass::vectorizeChainsInBlock(llvm::BasicBlock*, llvm::slpvectorizer::BoUpSLP&) + 5854
12 clang++   0x000055f525ec4723 llvm::SLPVectorizerPass::runImpl(llvm::Function&, llvm::ScalarEvolution*, llvm::TargetTransformInfo*, llvm::TargetLibraryInfo*, llvm::AAResults*, llvm::LoopInfo*, llvm::DominatorTree*, llvm::AssumptionCache*, llvm::DemandedBits*, llvm::OptimizationRemarkEmitter*) + 4355
13 clang++   0x000055f525ec35a9 llvm::SLPVectorizerPass::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) + 505
14 clang++   0x000055f5259552fd
15 clang++   0x000055f52410bd17 llvm::PassManager<llvm::Function, llvm::AnalysisManager<llvm::Function>>::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) + 407
16 clang++   0x000055f5235f718d
17 clang++   0x000055f524110411 llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) + 353
18 clang++   0x000055f5235f730d
19 clang++   0x000055f52410aeca llvm::PassManager<llvm::Module, llvm::AnalysisManager<llvm::Module>>::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) + 794
20 clang++   0x000055f524e3cd67
21 clang++   0x000055f524e31b90 clang::emitBackendOutput(clang::CompilerInstance&, clang::CodeGenOptions&, llvm::StringRef, llvm::Module*, clang::BackendAction, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::unique_ptr<llvm::raw_pwrite_stream, std::default_delete<llvm::raw_pwrite_stream>>, clang::BackendConsumer*) + 3280
22 clang++   0x000055f524e49b50 clang::BackendConsumer::HandleTranslationUnit(clang::ASTContext&) + 2880
23 clang++   0x000055f526677049 clang::ParseAST(clang::Sema&, bool, bool) + 921
24 clang++   0x000055f5254715fd clang::FrontendAction::Execute() + 29
25 clang++   0x000055f5253a4e50 clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) + 1200
26 clang++   0x000055f52557bcb2 clang::ExecuteCompilerInvocation(clang::CompilerInstance*) + 690
27 clang++   0x000055f5232b3ca0 cc1_main(llvm::ArrayRef<char const*>, char const*, void*) + 8976
28 clang++   0x000055f5232afea0
29 clang++   0x000055f5251e1649
30 clang++   0x000055f5245908c8 llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) + 136
31 clang++   0x000055f5251e1284 clang::driver::CC1Command::Execute(llvm::ArrayRef<std::optional<llvm::StringRef>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>*, bool*) const + 356
32 clang++   0x000055f52519e567 clang::driver::Compilation::ExecuteCommand(clang::driver::Command const&, clang::driver::Command const*&, bool) const + 535
33 clang++   0x000055f52519e73e clang::driver::Compilation::ExecuteJobs(clang::driver::JobList const&, llvm::SmallVectorImpl<std::pair<int, clang::driver::Command const*>>&, bool) const + 126
34 clang++   0x000055f5251bdd1c clang::driver::Driver::ExecuteCompilation(clang::driver::Compilation&, llvm::SmallVectorImpl<std::pair<int, clang::driver::Command const*>>&) + 460
35 clang++   0x000055f5232af648 clang_main(int, char**, llvm::ToolContext const&) + 7416
36 clang++   0x000055f5232c095a main + 90
37 libc.so.6 0x00007f9de9204d90
38 libc.so.6 0x00007f9de9204e40 __libc_start_main + 128
39 clang++   0x000055f52329ea25 _start + 37
clang++: error: clang frontend command failed with exit code 139 (use -v to see invocation)
clang version 21.0.0git
Target: x86_64-unknown-linux-gnu
Thread model: posix
InstalledDir: /tmp/llvm-project-build-stage2/bin
clang++: note: diagnostic msg: 
********************

PLEASE ATTACH THE FOLLOWING FILES TO THE BUG REPORT:
Preprocessed source(s) and associated run script(s) are located at:
clang++: note: diagnostic msg: /tmp/btBox2dBox2dCollisionAlgorithm-c29f5b.cpp
clang++: note: diagnostic msg: /tmp/btBox2dBox2dCollisionAlgorithm-c29f5b.sh
clang++: note: diagnostic msg: 

********************
[252/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dShape.cpp.o
FAILED: CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dShape.cpp.o 
/tmp/llvm-test-suite-build/tools/timeit --summary CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dShape.cpp.o.time /tmp/llvm-project-build-stage2/bin/clang++ -DNDEBUG  -O3   -w -Werror=date-time -I/var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/include -std=gnu++98 -DNO_TIME -MD -MT CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dShape.cpp.o -MF CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dShape.cpp.o.d -o CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dShape.cpp.o -c /var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/btBox2dShape.cpp
PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace, preprocessed source, and associated run script.
Stack dump:
0.	Program arguments: /tmp/llvm-project-build-stage2/bin/clang++ -DNDEBUG -O3 -w -Werror=date-time -I/var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/include -std=gnu++98 -DNO_TIME -MD -MT CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dShape.cpp.o -MF CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dShape.cpp.o.d -o CTMark/Bullet/CMakeFiles/bullet.dir/btBox2dShape.cpp.o -c /var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/btBox2dShape.cpp
1.	<eof> parser at end of file
2.	Optimizer
3.	Running pass "function<eager-inv>(float2int,lower-constant-intrinsics,chr,loop(loop-rotate<header-duplication;no-prepare-for-lto>,loop-deletion),loop-distribute,inject-tli-mappings,loop-vectorize<no-interleave-forced-only;no-vectorize-forced-only;>,infer-alignment,loop-load-elim,instcombine<max-iterations=1;no-verify-fixpoint>,simplifycfg<bonus-inst-threshold=1;forward-switch-cond;switch-range-to-icmp;switch-to-lookup;no-keep-loops;hoist-common-insts;no-hoist-loads-stores-with-cond-faulting;sink-common-insts;speculate-blocks;simplify-cond-branch;no-speculate-unpredictables>,slp-vectorizer,vector-combine,instcombine<max-iterations=1;no-verify-fixpoint>,loop-unroll<O3>,transform-warning,sroa<preserve-cfg>,infer-alignment,instcombine<max-iterations=1;no-verify-fixpoint>,loop-mssa(licm<allowspeculation>),alignment-from-assumptions,loop-sink,instsimplify,div-rem-pairs,tailcallelim,simplifycfg<bonus-inst-threshold=1;no-forward-switch-cond;switch-range-to-icmp;no-switch-to-lookup;keep-loops;no-hoist-common-insts;hoist-loads-stores-with-cond-faulting;no-sink-common-insts;speculate-blocks;simplify-cond-branch;speculate-unpredictables>)" on module "/var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/btBox2dShape.cpp"
4.	Running pass "slp-vectorizer" on function "_ZNK12btBox2dShape7getAabbERK11btTransformR9btVector3S4_"
Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):
0  clang++   0x000055a0ff435d38 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 40
1  clang++   0x000055a0ff432cb5 llvm::sys::RunSignalHandlers() + 293
2  clang++   0x000055a0ff397dc7
3  libc.so.6 0x00007fcc0e158520
4  clang++   0x000055a0fe6c307e llvm::ScalarEvolution::visitAndClearUsers(llvm::SmallVectorImpl<llvm::Instruction*>&, llvm::SmallPtrSetImpl<llvm::Instruction*>&, llvm::SmallVectorImpl<llvm::SCEV const*>&) + 238
5  clang++   0x000055a0fe6c3f6d llvm::ScalarEvolution::forgetValue(llvm::Value*) + 157
6  clang++   0x000055a100cbb870 llvm::slpvectorizer::BoUpSLP::vectorizeTree(llvm::SmallDenseSet<llvm::Value*, 4u, llvm::DenseMapInfo<llvm::Value*, void>> const&, llvm::Instruction*, llvm::ArrayRef<std::tuple<llvm::Value*, unsigned int, bool>>) + 43296
7  clang++   0x000055a100cd4e33 llvm::SLPVectorizerPass::tryToVectorizeList(llvm::ArrayRef<llvm::Value*>, llvm::slpvectorizer::BoUpSLP&, bool) + 4083
8  clang++   0x000055a100cdbbb4 llvm::SLPVectorizerPass::vectorizeInsertElementInst(llvm::InsertElementInst*, llvm::BasicBlock*, llvm::slpvectorizer::BoUpSLP&, bool) + 708
9  clang++   0x000055a100cdc21a llvm::SLPVectorizerPass::vectorizeInserts(llvm::SmallSetVector<llvm::Instruction*, 8u>&, llvm::BasicBlock*, llvm::slpvectorizer::BoUpSLP&) + 490
10 clang++   0x000055a100cdcd92
11 clang++   0x000055a100ccdfee llvm::SLPVectorizerPass::vectorizeChainsInBlock(llvm::BasicBlock*, llvm::slpvectorizer::BoUpSLP&) + 5854
12 clang++   0x000055a100ccb723 llvm::SLPVectorizerPass::runImpl(llvm::Function&, llvm::ScalarEvolution*, llvm::TargetTransformInfo*, llvm::TargetLibraryInfo*, llvm::AAResults*, llvm::LoopInfo*, llvm::DominatorTree*, llvm::AssumptionCache*, llvm::DemandedBits*, llvm::OptimizationRemarkEmitter*) + 4355
13 clang++   0x000055a100cca5a9 llvm::SLPVectorizerPass::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) + 505
14 clang++   0x000055a10075c2fd
15 clang++   0x000055a0fef12d17 llvm::PassManager<llvm::Function, llvm::AnalysisManager<llvm::Function>>::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) + 407
16 clang++   0x000055a0fe3fe18d
17 clang++   0x000055a0fef17411 llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) + 353
18 clang++   0x000055a0fe3fe30d
19 clang++   0x000055a0fef11eca llvm::PassManager<llvm::Module, llvm::AnalysisManager<llvm::Module>>::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) + 794
20 clang++   0x000055a0ffc43d67
21 clang++   0x000055a0ffc38b90 clang::emitBackendOutput(clang::CompilerInstance&, clang::CodeGenOptions&, llvm::StringRef, llvm::Module*, clang::BackendAction, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::unique_ptr<llvm::raw_pwrite_stream, std::default_delete<llvm::raw_pwrite_stream>>, clang::BackendConsumer*) + 3280
22 clang++   0x000055a0ffc50b50 clang::BackendConsumer::HandleTranslationUnit(clang::ASTContext&) + 2880
23 clang++   0x000055a10147e049 clang::ParseAST(clang::Sema&, bool, bool) + 921
24 clang++   0x000055a1002785fd clang::FrontendAction::Execute() + 29
25 clang++   0x000055a1001abe50 clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) + 1200
26 clang++   0x000055a100382cb2 clang::ExecuteCompilerInvocation(clang::CompilerInstance*) + 690
27 clang++   0x000055a0fe0baca0 cc1_main(llvm::ArrayRef<char const*>, char const*, void*) + 8976
28 clang++   0x000055a0fe0b6ea0
29 clang++   0x000055a0fffe8649
30 clang++   0x000055a0ff3978c8 llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) + 136
31 clang++   0x000055a0fffe8284 clang::driver::CC1Command::Execute(llvm::ArrayRef<std::optional<llvm::StringRef>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>*, bool*) const + 356
32 clang++   0x000055a0fffa5567 clang::driver::Compilation::ExecuteCommand(clang::driver::Command const&, clang::driver::Command const*&, bool) const + 535
33 clang++   0x000055a0fffa573e clang::driver::Compilation::ExecuteJobs(clang::driver::JobList const&, llvm::SmallVectorImpl<std::pair<int, clang::driver::Command const*>>&, bool) const + 126
34 clang++   0x000055a0fffc4d1c clang::driver::Driver::ExecuteCompilation(clang::driver::Compilation&, llvm::SmallVectorImpl<std::pair<int, clang::driver::Command const*>>&) + 460
35 clang++   0x000055a0fe0b6648 clang_main(int, char**, llvm::ToolContext const&) + 7416
36 clang++   0x000055a0fe0c795a main + 90
37 libc.so.6 0x00007fcc0e13fd90
38 libc.so.6 0x00007fcc0e13fe40 __libc_start_main + 128
39 clang++   0x000055a0fe0a5a25 _start + 37
clang++: error: clang frontend command failed with exit code 139 (use -v to see invocation)
clang version 21.0.0git
Target: x86_64-unknown-linux-gnu
Thread model: posix
InstalledDir: /tmp/llvm-project-build-stage2/bin
clang++: note: diagnostic msg: 
********************

PLEASE ATTACH THE FOLLOWING FILES TO THE BUG REPORT:
Preprocessed source(s) and associated run script(s) are located at:
clang++: note: diagnostic msg: /tmp/btBox2dShape-7abd49.cpp
clang++: note: diagnostic msg: /tmp/btBox2dShape-7abd49.sh
clang++: note: diagnostic msg: 

********************
[253/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/btAxisSweep3.cpp.o
[254/671] Building CXX object CTMark/Bullet/CMakeFiles/bullet.dir/BenchmarkDemo.cpp.o
FAILED: CTMark/Bullet/CMakeFiles/bullet.dir/BenchmarkDemo.cpp.o 
/tmp/llvm-test-suite-build/tools/timeit --summary CTMark/Bullet/CMakeFiles/bullet.dir/BenchmarkDemo.cpp.o.time /tmp/llvm-project-build-stage2/bin/clang++ -DNDEBUG  -O3   -w -Werror=date-time -I/var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/include -std=gnu++98 -DNO_TIME -MD -MT CTMark/Bullet/CMakeFiles/bullet.dir/BenchmarkDemo.cpp.o -MF CTMark/Bullet/CMakeFiles/bullet.dir/BenchmarkDemo.cpp.o.d -o CTMark/Bullet/CMakeFiles/bullet.dir/BenchmarkDemo.cpp.o -c /var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/BenchmarkDemo.cpp
PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace, preprocessed source, and associated run script.
Stack dump:
0.	Program arguments: /tmp/llvm-project-build-stage2/bin/clang++ -DNDEBUG -O3 -w -Werror=date-time -I/var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/include -std=gnu++98 -DNO_TIME -MD -MT CTMark/Bullet/CMakeFiles/bullet.dir/BenchmarkDemo.cpp.o -MF CTMark/Bullet/CMakeFiles/bullet.dir/BenchmarkDemo.cpp.o.d -o CTMark/Bullet/CMakeFiles/bullet.dir/BenchmarkDemo.cpp.o -c /var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/BenchmarkDemo.cpp
1.	<eof> parser at end of file
2.	Optimizer
3.	Running pass "function<eager-inv>(float2int,lower-constant-intrinsics,chr,loop(loop-rotate<header-duplication;no-prepare-for-lto>,loop-deletion),loop-distribute,inject-tli-mappings,loop-vectorize<no-interleave-forced-only;no-vectorize-forced-only;>,infer-alignment,loop-load-elim,instcombine<max-iterations=1;no-verify-fixpoint>,simplifycfg<bonus-inst-threshold=1;forward-switch-cond;switch-range-to-icmp;switch-to-lookup;no-keep-loops;hoist-common-insts;no-hoist-loads-stores-with-cond-faulting;sink-common-insts;speculate-blocks;simplify-cond-branch;no-speculate-unpredictables>,slp-vectorizer,vector-combine,instcombine<max-iterations=1;no-verify-fixpoint>,loop-unroll<O3>,transform-warning,sroa<preserve-cfg>,infer-alignment,instcombine<max-iterations=1;no-verify-fixpoint>,loop-mssa(licm<allowspeculation>),alignment-from-assumptions,loop-sink,instsimplify,div-rem-pairs,tailcallelim,simplifycfg<bonus-inst-threshold=1;no-forward-switch-cond;switch-range-to-icmp;no-switch-to-lookup;keep-loops;no-hoist-common-insts;hoist-loads-stores-with-cond-faulting;no-sink-common-insts;speculate-blocks;simplify-cond-branch;speculate-unpredictables>)" on module "/var/llvm-compile-time-tracker/llvm-test-suite/CTMark/Bullet/BenchmarkDemo.cpp"
4.	Running pass "slp-vectorizer" on function "_ZN13BenchmarkDemo13createPyramidERK9btVector3iS2_"
Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):
0  clang++   0x0000555568591d38 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 40
1  clang++   0x000055556858ecb5 llvm::sys::RunSignalHandlers() + 293
2  clang++   0x00005555684f3dc7
3  libc.so.6 0x00007fa8839aa520
4  clang++   0x000055556781f07e llvm::ScalarEvolution::visitAndClearUsers(llvm::SmallVectorImpl<llvm::Instruction*>&, llvm::SmallPtrSetImpl<llvm::Instruction*>&, llvm::SmallVectorImpl<llvm::SCEV const*>&) + 238
5  clang++   0x000055556781ff6d llvm::ScalarEvolution::forgetValue(llvm::Value*) + 157
6  clang++   0x0000555569e17870 llvm::slpvectorizer::BoUpSLP::vectorizeTree(llvm::SmallDenseSet<llvm::Value*, 4u, llvm::DenseMapInfo<llvm::Value*, void>> const&, llvm::Instruction*, llvm::ArrayRef<std::tuple<llvm::Value*, unsigned int, bool>>) + 43296
7  clang++   0x0000555569e30e33 llvm::SLPVectorizerPass::tryToVectorizeList(llvm::ArrayRef<llvm::Value*>, llvm::slpvectorizer::BoUpSLP&, bool) + 4083
8  clang++   0x0000555569e38a32
9  clang++   0x0000555569e29238 llvm::SLPVectorizerPass::vectorizeChainsInBlock(llvm::BasicBlock*, llvm::slpvectorizer::BoUpSLP&) + 2344
10 clang++   0x0000555569e27723 llvm::SLPVectorizerPass::runImpl(llvm::Function&, llvm::ScalarEvolution*, llvm::TargetTransformInfo*, llvm::TargetLibraryInfo*, llvm::AAResults*, llvm::LoopInfo*, llvm::DominatorTree*, llvm::AssumptionCache*, llvm::DemandedBits*, llvm::OptimizationRemarkEmitter*) + 4355
11 clang++   0x0000555569e265a9 llvm::SLPVectorizerPass::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) + 505
12 clang++   0x00005555698b82fd
13 clang++   0x000055556806ed17 llvm::PassManager<llvm::Function, llvm::AnalysisManager<llvm::Function>>::run(llvm::Function&, llvm::AnalysisManager<llvm::Function>&) + 407
14 clang++   0x000055556755a18d
15 clang++   0x0000555568073411 llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) + 353
16 clang++   0x000055556755a30d
17 clang++   0x000055556806deca llvm::PassManager<llvm::Module, llvm::AnalysisManager<llvm::Module>>::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) + 794
18 clang++   0x0000555568d9fd67
19 clang++   0x0000555568d94b90 clang::emitBackendOutput(clang::CompilerInstance&, clang::CodeGenOptions&, llvm::StringRef, llvm::Module*, clang::BackendAction, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::unique_ptr<llvm::raw_pwrite_stream, std::default_delete<llvm::raw_pwrite_stream>>, clang::BackendConsumer*) + 3280
20 clang++   0x0000555568dacb50 clang::BackendConsumer::HandleTranslationUnit(clang::ASTContext&) + 2880
21 clang++   0x000055556a5da049 clang::ParseAST(clang::Sema&, bool, bool) + 921
22 clang++   0x00005555693d45fd clang::FrontendAction::Execute() + 29
23 clang++   0x0000555569307e50 clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) + 1200
24 clang++   0x00005555694decb2 clang::ExecuteCompilerInvocation(clang::CompilerInstance*) + 690
25 clang++   0x0000555567216ca0 cc1_main(llvm::ArrayRef<char const*>, char const*, void*) + 8976
26 clang++   0x0000555567212ea0
27 clang++   0x0000555569144649
28 clang++   0x00005555684f38c8 llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) + 136
29 clang++   0x0000555569144284 clang::driver::CC1Command::Execute(llvm::ArrayRef<std::optional<llvm::StringRef>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>*, bool*) const + 356
30 clang++   0x0000555569101567 clang::driver::Compilation::ExecuteCommand(clang::driver::Command const&, clang::driver::Command const*&, bool) const + 535
31 clang++   0x000055556910173e clang::driver::Compilation::ExecuteJobs(clang::driver::JobList const&, llvm::SmallVectorImpl<std::pair<int, clang::driver::Command const*>>&, bool) const + 126
32 clang++   0x0000555569120d1c clang::driver::Driver::ExecuteCompilation(clang::driver::Compilation&, llvm::SmallVectorImpl<std::pair<int, clang::driver::Command const*>>&) + 460
33 clang++   0x0000555567212648 clang_main(int, char**, llvm::ToolContext const&) + 7416
34 clang++   0x000055556722395a main + 90
35 libc.so.6 0x00007fa883991d90
36 libc.so.6 0x00007fa883991e40 __libc_start_main + 128
37 clang++   0x0000555567201a25 _start + 37
clang++: error: clang frontend command failed with exit code 139 (use -v to see invocation)
clang version 21.0.0git
Target: x86_64-unknown-linux-gnu
Thread model: posix
InstalledDir: /tmp/llvm-project-build-stage2/bin
clang++: note: diagnostic msg: 
********************

PLEASE ATTACH THE FOLLOWING FILES TO THE BUG REPORT:
Preprocessed source(s) and associated run script(s) are located at:
clang++: note: diagnostic msg: /tmp/BenchmarkDemo-b8b22d.cpp
clang++: note: diagnostic msg: /tmp/BenchmarkDemo-b8b22d.sh
clang++: note: diagnostic msg: 

********************
ninja: build stopped: subcommand failed.


STDERR:
