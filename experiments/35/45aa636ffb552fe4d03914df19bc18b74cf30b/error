MESSAGE: Execution of "./build_llvm_test_suite.sh ReleaseLTO-g" failed

STDOUT:
loading initial cache file ./llvm-test-suite/cmake/caches/ReleaseLTO-g.cmake
-- The C compiler identification is Clang 17.0.0
-- The CXX compiler identification is Clang 17.0.0
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: /root/llvm-compile-time-tracker/llvm-project-build/bin/clang - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: /root/llvm-compile-time-tracker/llvm-project-build/bin/clang++ - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Could NOT find OpenMP_C (missing: OpenMP_C_FLAGS OpenMP_C_LIB_NAMES) 
-- Could NOT find OpenMP_CXX (missing: OpenMP_CXX_FLAGS OpenMP_CXX_LIB_NAMES) 
-- Could NOT find OpenMP (missing: OpenMP_C_FOUND OpenMP_CXX_FOUND) 
-- Check target operating system - Linux
-- Check target system architecture: x86
-- Check target system architecture: zen
-- Adding directory CTMark
-- Found Intl: built in to C library  
-- Found Tclsh: /bin/tclsh (found version "8.6") 
-- Could NOT find TCL (missing: TCL_INCLUDE_PATH) 
-- Could NOT find TCLTK (missing: TCL_INCLUDE_PATH TK_LIBRARY TK_INCLUDE_PATH) 
-- Could NOT find TK (missing: TK_LIBRARY TK_INCLUDE_PATH) 
-- Configuring done
-- Generating done
-- Build files have been written to: /root/llvm-compile-time-tracker/llvm-test-suite-build
ninja: Entering directory `./llvm-test-suite-build'
[1/669] Generating HashProgramOutput.sh
[2/669] Generating timeit-target
[3/669] Generating timeit
[4/669] Generating ../lit.cfg
[5/669] Generating modules/__init__.py
[6/669] Generating __init__.py
[7/669] Generating modules/codesize.py
[8/669] Generating modules/compiletime.py
[9/669] Generating modules/hash.py
[10/669] Generating modules/hpmcount.py
[11/669] Generating modules/microbenchmark.py
[12/669] Generating modules/perf.py
[13/669] Generating modules/run.py
[14/669] Generating modules/profilegen.py
[15/669] Generating modules/remote.py
[16/669] Generating modules/run_under.py
[17/669] Generating modules/stats.py
[18/669] Generating modules/timeit.py
[19/669] Generating testfile.py
[20/669] Generating shellcommand.py
[21/669] Generating test.py
[22/669] [TEST_SUITE_HOST_CC] Compiling host source fpcmp.c
[23/669] Generating testplan.py
[24/669] [TEST_SUITE_HOST_CC] Linking host executable fpcmp
[25/669] Building C object tools/CMakeFiles/fpcmp-target.dir/fpcmp.c.o
[26/669] Linking C executable tools/fpcmp-target
FAILED: tools/fpcmp-target 
: && /root/llvm-compile-time-tracker/llvm-project-build/bin/clang -O3 -fomit-frame-pointer -flto -DNDEBUG -g  tools/CMakeFiles/fpcmp-target.dir/fpcmp.c.o -o tools/fpcmp-target   && :
terminate called after throwing an instance of 'std::bad_alloc'
  what():  std::bad_alloc
clang: error: unable to execute command: Aborted
clang: error: linker command failed due to signal (use -v to see invocation)
[27/669] Generating sqlite test inputs
ninja: build stopped: subcommand failed.


STDERR:
MESSAGE: Execution of "./build_llvm_test_suite.sh O0-g" failed

STDOUT:
loading initial cache file ./llvm-test-suite/cmake/caches/O0-g.cmake
-- The C compiler identification is Clang 17.0.0
-- The CXX compiler identification is Clang 17.0.0
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: /root/llvm-compile-time-tracker/llvm-project-build/bin/clang - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: /root/llvm-compile-time-tracker/llvm-project-build/bin/clang++ - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Could NOT find OpenMP_C (missing: OpenMP_C_FLAGS OpenMP_C_LIB_NAMES) 
-- Could NOT find OpenMP_CXX (missing: OpenMP_CXX_FLAGS OpenMP_CXX_LIB_NAMES) 
-- Could NOT find OpenMP (missing: OpenMP_C_FOUND OpenMP_CXX_FOUND) 
-- Check target operating system - Linux
-- Check target system architecture: x86
-- Check target system architecture: zen
-- Adding directory CTMark
-- Found Intl: built in to C library  
-- Found Tclsh: /bin/tclsh (found version "8.6") 
-- Could NOT find TCL (missing: TCL_INCLUDE_PATH) 
-- Could NOT find TCLTK (missing: TCL_INCLUDE_PATH TK_LIBRARY TK_INCLUDE_PATH) 
-- Could NOT find TK (missing: TK_LIBRARY TK_INCLUDE_PATH) 
-- Configuring done
-- Generating done
-- Build files have been written to: /root/llvm-compile-time-tracker/llvm-test-suite-build
ninja: Entering directory `./llvm-test-suite-build'
[1/669] Generating HashProgramOutput.sh
[2/669] Generating timeit
[3/669] Generating timeit-target
[4/669] Generating modules/__init__.py
[5/669] Generating ../lit.cfg
[6/669] Generating __init__.py
[7/669] Generating modules/codesize.py
[8/669] Generating modules/hash.py
[9/669] Generating modules/compiletime.py
[10/669] Generating modules/microbenchmark.py
[11/669] Generating modules/hpmcount.py
[12/669] Generating modules/perf.py
[13/669] Generating modules/profilegen.py
[14/669] Generating modules/remote.py
[15/669] Generating modules/run.py
[16/669] Generating modules/run_under.py
[17/669] Generating modules/stats.py
[18/669] Generating modules/timeit.py
[19/669] Generating shellcommand.py
[20/669] Generating test.py
[21/669] Generating testfile.py
[22/669] [TEST_SUITE_HOST_CC] Compiling host source fpcmp.c
[23/669] Generating testplan.py
[24/669] [TEST_SUITE_HOST_CC] Linking host executable fpcmp
[25/669] Generating sqlite test inputs
[26/669] Building C object tools/CMakeFiles/fpcmp-target.dir/fpcmp.c.o
FAILED: tools/CMakeFiles/fpcmp-target.dir/fpcmp.c.o 
/root/llvm-compile-time-tracker/llvm-project-build/bin/clang -DNDEBUG  -O0 -g   -w -Werror=date-time -MD -MT tools/CMakeFiles/fpcmp-target.dir/fpcmp.c.o -MF tools/CMakeFiles/fpcmp-target.dir/fpcmp.c.o.d -o tools/CMakeFiles/fpcmp-target.dir/fpcmp.c.o -c /root/llvm-compile-time-tracker/llvm-test-suite/tools/fpcmp.c
PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace, preprocessed source, and associated run script.
Stack dump:
0.	Program arguments: /root/llvm-compile-time-tracker/llvm-project-build/bin/clang -DNDEBUG -O0 -g -w -Werror=date-time -MD -MT tools/CMakeFiles/fpcmp-target.dir/fpcmp.c.o -MF tools/CMakeFiles/fpcmp-target.dir/fpcmp.c.o.d -o tools/CMakeFiles/fpcmp-target.dir/fpcmp.c.o -c /root/llvm-compile-time-tracker/llvm-test-suite/tools/fpcmp.c
1.	<eof> parser at end of file
2.	Code generation
3.	Running pass 'Function Pass Manager' on module '/root/llvm-compile-time-tracker/llvm-test-suite/tools/fpcmp.c'.
4.	Running pass 'Assignment Tracking Analysis' on function '@diff_file'
Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):
0  clang     0x000055fb8e80d3d6 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 246
1  clang     0x000055fb8e80b224 llvm::sys::CleanupOnSignal(unsigned long) + 180
2  clang     0x000055fb8e76ba18
3  libc.so.6 0x00007fb3ec246520
4  clang     0x000055fb8dfae953
5  clang     0x000055fb8dfc13d8
6  clang     0x000055fb8dfccbf9 llvm::AssignmentTrackingAnalysis::runOnFunction(llvm::Function&) + 1481
7  clang     0x000055fb8e126640 llvm::FPPassManager::runOnFunction(llvm::Function&) + 1056
8  clang     0x000055fb8e1267b4 llvm::FPPassManager::runOnModule(llvm::Module&) + 52
9  clang     0x000055fb8e1271b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 1012
10 clang     0x000055fb8eb8c0f6 clang::EmitBackendOutput(clang::DiagnosticsEngine&, clang::HeaderSearchOptions const&, clang::CodeGenOptions const&, clang::TargetOptions const&, clang::LangOptions const&, llvm::StringRef, llvm::Module*, clang::BackendAction, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::unique_ptr<llvm::raw_pwrite_stream, std::default_delete<llvm::raw_pwrite_stream>>) + 6102
11 clang     0x000055fb8f9d1c1e
12 clang     0x000055fb8fe08209 clang::ParseAST(clang::Sema&, bool, bool) + 1129
13 clang     0x000055fb8f3365e9 clang::FrontendAction::Execute() + 201
14 clang     0x000055fb8f2bcee1 clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) + 289
15 clang     0x000055fb8f3f72ac clang::ExecuteCompilerInvocation(clang::CompilerInstance*) + 348
16 clang     0x000055fb8d460ff5 cc1_main(llvm::ArrayRef<char const*>, char const*, void*) + 4709
17 clang     0x000055fb8d45c18d
18 clang     0x000055fb8f118ebd
19 clang     0x000055fb8e76be47 llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) + 39
20 clang     0x000055fb8f119257
21 clang     0x000055fb8f0e39d1 clang::driver::Compilation::ExecuteCommand(clang::driver::Command const&, clang::driver::Command const*&, bool) const + 177
22 clang     0x000055fb8f0e44ad clang::driver::Compilation::ExecuteJobs(clang::driver::JobList const&, llvm::SmallVectorImpl<std::pair<int, clang::driver::Command const*>>&, bool) const + 269
23 clang     0x000055fb8f0f53dc clang::driver::Driver::ExecuteCompilation(clang::driver::Compilation&, llvm::SmallVectorImpl<std::pair<int, clang::driver::Command const*>>&) + 332
24 clang     0x000055fb8d45effb clang_main(int, char**, llvm::ToolContext const&) + 10459
25 clang     0x000055fb8d3adc03 main + 51
26 libc.so.6 0x00007fb3ec22dd90
27 libc.so.6 0x00007fb3ec22de40 __libc_start_main + 128
28 clang     0x000055fb8d458295 _start + 37
clang: error: clang frontend command failed with exit code 139 (use -v to see invocation)
clang version 17.0.0
Target: x86_64-unknown-linux-gnu
Thread model: posix
InstalledDir: /root/llvm-compile-time-tracker/llvm-project-build/bin
clang: note: diagnostic msg: 
********************

PLEASE ATTACH THE FOLLOWING FILES TO THE BUG REPORT:
Preprocessed source(s) and associated run script(s) are located at:
clang: note: diagnostic msg: /tmp/fpcmp-54d0a6.c
clang: note: diagnostic msg: /tmp/fpcmp-54d0a6.sh
clang: note: diagnostic msg: 

********************
ninja: build stopped: subcommand failed.


STDERR:
