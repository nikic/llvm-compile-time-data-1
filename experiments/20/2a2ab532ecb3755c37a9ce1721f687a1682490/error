MESSAGE: Execution of "sudo -u lctt-runner ./build_llvm_test_suite.sh O3 stage2 " failed

STDOUT:
loading initial cache file ./llvm-test-suite/cmake/caches/O3.cmake
-- The C compiler identification is unknown
-- The CXX compiler identification is unknown
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - failed
-- Check for working C compiler: /tmp/llvm-project-build-stage2/bin/clang
-- Check for working C compiler: /tmp/llvm-project-build-stage2/bin/clang - broken
-- Configuring incomplete, errors occurred!
See also "/tmp/llvm-test-suite-build/CMakeFiles/CMakeOutput.log".
See also "/tmp/llvm-test-suite-build/CMakeFiles/CMakeError.log".
ninja: Entering directory `/tmp/llvm-test-suite-build'


STDERR:
CMake Error at /usr/share/cmake-3.22/Modules/CMakeTestCCompiler.cmake:69 (message):
  The C compiler

    "/tmp/llvm-project-build-stage2/bin/clang"

  is not able to compile a simple test program.

  It fails with the following output:

    Change Dir: /tmp/llvm-test-suite-build/CMakeFiles/CMakeTmp
    
    Run Build Command(s):/usr/bin/ninja cmTC_d8e9b && [1/2] Building C object CMakeFiles/cmTC_d8e9b.dir/testCCompiler.c.o
    FAILED: CMakeFiles/cmTC_d8e9b.dir/testCCompiler.c.o 
    /tmp/llvm-project-build-stage2/bin/clang    -o CMakeFiles/cmTC_d8e9b.dir/testCCompiler.c.o -c /tmp/llvm-test-suite-build/CMakeFiles/CMakeTmp/testCCompiler.c
    free(): invalid pointer
    PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace, preprocessed source, and associated run script.
    Stack dump:
    0.	Program arguments: /tmp/llvm-project-build-stage2/bin/clang -o CMakeFiles/cmTC_d8e9b.dir/testCCompiler.c.o -c /tmp/llvm-test-suite-build/CMakeFiles/CMakeTmp/testCCompiler.c
    1.	<eof> parser at end of file
    Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):
    0  clang     0x000055a6818179d8 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 40
    1  clang     0x000055a6818148e5 llvm::sys::RunSignalHandlers() + 293
    2  clang     0x000055a68177b1a7
    3  libc.so.6 0x00007f44d30d5520
    4  libc.so.6 0x00007f44d31299fc pthread_kill + 300
    5  libc.so.6 0x00007f44d30d5476 raise + 22
    6  libc.so.6 0x00007f44d30bb7f3 abort + 211
    7  libc.so.6 0x00007f44d311c677
    8  libc.so.6 0x00007f44d3133cfc
    9  libc.so.6 0x00007f44d3135a44
    10 libc.so.6 0x00007f44d3138453 free + 115
    11 clang     0x000055a682a422e1
    12 clang     0x000055a680747c01
    13 clang     0x000055a682022f5b
    14 clang     0x000055a682017dd1 clang::emitBackendOutput(clang::CompilerInstance&, clang::CodeGenOptions&, llvm::StringRef, llvm::Module*, clang::BackendAction, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::unique_ptr<llvm::raw_pwrite_stream, std::default_delete<llvm::raw_pwrite_stream>>, clang::BackendConsumer*) + 3281
    15 clang     0x000055a68202f0c0 clang::BackendConsumer::HandleTranslationUnit(clang::ASTContext&) + 2880
    16 clang     0x000055a68387d039 clang::ParseAST(clang::Sema&, bool, bool) + 921
    17 clang     0x000055a68265ec2f clang::FrontendAction::Execute() + 29
    18 clang     0x000055a682591b50 clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) + 1200
    19 clang     0x000055a68276b9c2 clang::ExecuteCompilerInvocation(clang::CompilerInstance*) + 690
    20 clang     0x000055a6804a8c74 cc1_main(llvm::ArrayRef<char const*>, char const*, void*) + 9044
    21 clang     0x000055a6804a4e50
    22 clang     0x000055a6823d3559
    23 clang     0x000055a68177acd2 llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) + 136
    24 clang     0x000055a6823d31b4 clang::driver::CC1Command::Execute(llvm::ArrayRef<std::optional<llvm::StringRef>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>*, bool*) const + 356
    25 clang     0x000055a68238f7a7 clang::driver::Compilation::ExecuteCommand(clang::driver::Command const&, clang::driver::Command const*&, bool) const + 535
    26 clang     0x000055a68238f97e clang::driver::Compilation::ExecuteJobs(clang::driver::JobList const&, llvm::SmallVectorImpl<std::pair<int, clang::driver::Command const*>>&, bool) const + 126
    27 clang     0x000055a6823af95c clang::driver::Driver::ExecuteCompilation(clang::driver::Compilation&, llvm::SmallVectorImpl<std::pair<int, clang::driver::Command const*>>&) + 460
    28 clang     0x000055a6804a4589 clang_main(int, char**, llvm::ToolContext const&) + 7161
    29 clang     0x000055a6804b57ea main + 90
    30 libc.so.6 0x00007f44d30bcd90
    31 libc.so.6 0x00007f44d30bce40 __libc_start_main + 128
    32 clang     0x000055a680493a65 _start + 37
    clang: error: clang frontend command failed with exit code 134 (use -v to see invocation)
    clang version 22.0.0git
    Target: x86_64-unknown-linux-gnu
    Thread model: posix
    InstalledDir: /tmp/llvm-project-build-stage2/bin
    clang: note: diagnostic msg: 
    ********************
    
    PLEASE ATTACH THE FOLLOWING FILES TO THE BUG REPORT:
    Preprocessed source(s) and associated run script(s) are located at:
    clang: note: diagnostic msg: /tmp/testCCompiler-599807.c
    clang: note: diagnostic msg: /tmp/testCCompiler-599807.sh
    clang: note: diagnostic msg: 
    
    ********************
    ninja: build stopped: subcommand failed.
    
    

  

  CMake will not be able to correctly generate this project.
Call Stack (most recent call first):
  CMakeLists.txt:6 (project)


ninja: error: loading 'build.ninja': No such file or directory
MESSAGE: Execution of "sudo -u lctt-runner ./build_llvm_test_suite.sh O0-g stage2 " failed

STDOUT:
loading initial cache file ./llvm-test-suite/cmake/caches/O0-g.cmake
-- The C compiler identification is unknown
-- The CXX compiler identification is unknown
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - failed
-- Check for working C compiler: /tmp/llvm-project-build-stage2/bin/clang
-- Check for working C compiler: /tmp/llvm-project-build-stage2/bin/clang - broken
-- Configuring incomplete, errors occurred!
See also "/tmp/llvm-test-suite-build/CMakeFiles/CMakeOutput.log".
See also "/tmp/llvm-test-suite-build/CMakeFiles/CMakeError.log".
ninja: Entering directory `/tmp/llvm-test-suite-build'


STDERR:
CMake Error at /usr/share/cmake-3.22/Modules/CMakeTestCCompiler.cmake:69 (message):
  The C compiler

    "/tmp/llvm-project-build-stage2/bin/clang"

  is not able to compile a simple test program.

  It fails with the following output:

    Change Dir: /tmp/llvm-test-suite-build/CMakeFiles/CMakeTmp
    
    Run Build Command(s):/usr/bin/ninja cmTC_ea7c2 && [1/2] Building C object CMakeFiles/cmTC_ea7c2.dir/testCCompiler.c.o
    FAILED: CMakeFiles/cmTC_ea7c2.dir/testCCompiler.c.o 
    /tmp/llvm-project-build-stage2/bin/clang    -o CMakeFiles/cmTC_ea7c2.dir/testCCompiler.c.o -c /tmp/llvm-test-suite-build/CMakeFiles/CMakeTmp/testCCompiler.c
    free(): invalid pointer
    PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace, preprocessed source, and associated run script.
    Stack dump:
    0.	Program arguments: /tmp/llvm-project-build-stage2/bin/clang -o CMakeFiles/cmTC_ea7c2.dir/testCCompiler.c.o -c /tmp/llvm-test-suite-build/CMakeFiles/CMakeTmp/testCCompiler.c
    1.	<eof> parser at end of file
    Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):
    0  clang     0x000055c8f37929d8 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 40
    1  clang     0x000055c8f378f8e5 llvm::sys::RunSignalHandlers() + 293
    2  clang     0x000055c8f36f61a7
    3  libc.so.6 0x00007f4788098520
    4  libc.so.6 0x00007f47880ec9fc pthread_kill + 300
    5  libc.so.6 0x00007f4788098476 raise + 22
    6  libc.so.6 0x00007f478807e7f3 abort + 211
    7  libc.so.6 0x00007f47880df677
    8  libc.so.6 0x00007f47880f6cfc
    9  libc.so.6 0x00007f47880f8a44
    10 libc.so.6 0x00007f47880fb453 free + 115
    11 clang     0x000055c8f49bd2e1
    12 clang     0x000055c8f26c2c01
    13 clang     0x000055c8f3f9df5b
    14 clang     0x000055c8f3f92dd1 clang::emitBackendOutput(clang::CompilerInstance&, clang::CodeGenOptions&, llvm::StringRef, llvm::Module*, clang::BackendAction, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>, std::unique_ptr<llvm::raw_pwrite_stream, std::default_delete<llvm::raw_pwrite_stream>>, clang::BackendConsumer*) + 3281
    15 clang     0x000055c8f3faa0c0 clang::BackendConsumer::HandleTranslationUnit(clang::ASTContext&) + 2880
    16 clang     0x000055c8f57f8039 clang::ParseAST(clang::Sema&, bool, bool) + 921
    17 clang     0x000055c8f45d9c2f clang::FrontendAction::Execute() + 29
    18 clang     0x000055c8f450cb50 clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) + 1200
    19 clang     0x000055c8f46e69c2 clang::ExecuteCompilerInvocation(clang::CompilerInstance*) + 690
    20 clang     0x000055c8f2423c74 cc1_main(llvm::ArrayRef<char const*>, char const*, void*) + 9044
    21 clang     0x000055c8f241fe50
    22 clang     0x000055c8f434e559
    23 clang     0x000055c8f36f5cd2 llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) + 136
    24 clang     0x000055c8f434e1b4 clang::driver::CC1Command::Execute(llvm::ArrayRef<std::optional<llvm::StringRef>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>*, bool*) const + 356
    25 clang     0x000055c8f430a7a7 clang::driver::Compilation::ExecuteCommand(clang::driver::Command const&, clang::driver::Command const*&, bool) const + 535
    26 clang     0x000055c8f430a97e clang::driver::Compilation::ExecuteJobs(clang::driver::JobList const&, llvm::SmallVectorImpl<std::pair<int, clang::driver::Command const*>>&, bool) const + 126
    27 clang     0x000055c8f432a95c clang::driver::Driver::ExecuteCompilation(clang::driver::Compilation&, llvm::SmallVectorImpl<std::pair<int, clang::driver::Command const*>>&) + 460
    28 clang     0x000055c8f241f589 clang_main(int, char**, llvm::ToolContext const&) + 7161
    29 clang     0x000055c8f24307ea main + 90
    30 libc.so.6 0x00007f478807fd90
    31 libc.so.6 0x00007f478807fe40 __libc_start_main + 128
    32 clang     0x000055c8f240ea65 _start + 37
    clang: error: clang frontend command failed with exit code 134 (use -v to see invocation)
    clang version 22.0.0git
    Target: x86_64-unknown-linux-gnu
    Thread model: posix
    InstalledDir: /tmp/llvm-project-build-stage2/bin
    clang: note: diagnostic msg: 
    ********************
    
    PLEASE ATTACH THE FOLLOWING FILES TO THE BUG REPORT:
    Preprocessed source(s) and associated run script(s) are located at:
    clang: note: diagnostic msg: /tmp/testCCompiler-4268a2.c
    clang: note: diagnostic msg: /tmp/testCCompiler-4268a2.sh
    clang: note: diagnostic msg: 
    
    ********************
    ninja: build stopped: subcommand failed.
    
    

  

  CMake will not be able to correctly generate this project.
Call Stack (most recent call first):
  CMakeLists.txt:6 (project)


ninja: error: loading 'build.ninja': No such file or directory
