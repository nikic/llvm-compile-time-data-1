MESSAGE: Execution of "sudo -u lctt-runner ./build_llvm_project_stage2.sh" failed

STDOUT:
-- The C compiler identification is unknown
-- The CXX compiler identification is unknown
-- The ASM compiler identification is Clang with GNU-like command-line
-- Found assembler: /tmp/llvm-project-build-stage1/bin/clang
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - failed
-- Check for working C compiler: /tmp/llvm-project-build-stage1/bin/clang
-- Check for working C compiler: /tmp/llvm-project-build-stage1/bin/clang - broken
-- Configuring incomplete, errors occurred!
See also "/tmp/llvm-project-build-stage2/CMakeFiles/CMakeOutput.log".
See also "/tmp/llvm-project-build-stage2/CMakeFiles/CMakeError.log".


STDERR:
CMake Error at /usr/share/cmake-3.22/Modules/CMakeTestCCompiler.cmake:69 (message):
  The C compiler

    "/tmp/llvm-project-build-stage1/bin/clang"

  is not able to compile a simple test program.

  It fails with the following output:

    Change Dir: /tmp/llvm-project-build-stage2/CMakeFiles/CMakeTmp
    
    Run Build Command(s):/usr/bin/ninja cmTC_8222e && [1/2] Building C object CMakeFiles/cmTC_8222e.dir/testCCompiler.c.o
    FAILED: CMakeFiles/cmTC_8222e.dir/testCCompiler.c.o 
    /tmp/llvm-project-build-stage1/bin/clang    -o CMakeFiles/cmTC_8222e.dir/testCCompiler.c.o -c /tmp/llvm-project-build-stage2/CMakeFiles/CMakeTmp/testCCompiler.c
    free(): double free detected in tcache 2
    PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace, preprocessed source, and associated run script.
    Stack dump:
    0.	Program arguments: /tmp/llvm-project-build-stage1/bin/clang -o CMakeFiles/cmTC_8222e.dir/testCCompiler.c.o -c /tmp/llvm-project-build-stage2/CMakeFiles/CMakeTmp/testCCompiler.c
    Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):
    0  clang     0x000055efec1fde70 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 240
    1  clang     0x000055efec1fba24 llvm::sys::CleanupOnSignal(unsigned long) + 164
    2  clang     0x000055efec14ccd8
    3  libc.so.6 0x00007ff336a3d520
    4  libc.so.6 0x00007ff336a919fc pthread_kill + 300
    5  libc.so.6 0x00007ff336a3d476 raise + 22
    6  libc.so.6 0x00007ff336a237f3 abort + 211
    7  libc.so.6 0x00007ff336a84677
    8  libc.so.6 0x00007ff336a9bcfc
    9  libc.so.6 0x00007ff336a9e0ab
    10 libc.so.6 0x00007ff336aa0453 free + 115
    11 clang     0x000055efec77aa98 clang::CodeGen::CodeGenTypes::~CodeGenTypes() + 760
    12 clang     0x000055efec700c10 clang::CodeGen::CodeGenModule::~CodeGenModule() + 3328
    13 clang     0x000055efecaf0d4b
    14 clang     0x000055efecadd130
    15 clang     0x000055efece2ee39 clang::FrontendAction::EndSourceFile() + 185
    16 clang     0x000055efecda0aee clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) + 638
    17 clang     0x000055efecf1029c clang::ExecuteCompilerInvocation(clang::CompilerInstance*) + 364
    18 clang     0x000055efea9efd8a cc1_main(llvm::ArrayRef<char const*>, char const*, void*) + 7162
    19 clang     0x000055efea9e7652
    20 clang     0x000055efecb6927d
    21 clang     0x000055efec14d107 llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) + 39
    22 clang     0x000055efecb69617
    23 clang     0x000055efecb2ab91 clang::driver::Compilation::ExecuteCommand(clang::driver::Command const&, clang::driver::Command const*&, bool) const + 177
    24 clang     0x000055efecb2bc09 clang::driver::Compilation::ExecuteJobs(clang::driver::JobList const&, llvm::SmallVectorImpl<std::pair<int, clang::driver::Command const*>>&, bool) const + 153
    25 clang     0x000055efecb3fc8f clang::driver::Driver::ExecuteCompilation(clang::driver::Compilation&, llvm::SmallVectorImpl<std::pair<int, clang::driver::Command const*>>&) + 543
    26 clang     0x000055efea9ec12b clang_main(int, char**, llvm::ToolContext const&) + 7515
    27 clang     0x000055efea8f020b main + 107
    28 libc.so.6 0x00007ff336a24d90
    29 libc.so.6 0x00007ff336a24e40 __libc_start_main + 128
    30 clang     0x000055efea9e70b5 _start + 37
    clang: error: clang frontend command failed with exit code 134 (use -v to see invocation)
    clang version 22.0.0git
    Target: x86_64-unknown-linux-gnu
    Thread model: posix
    InstalledDir: /tmp/llvm-project-build-stage1/bin
    clang: note: diagnostic msg: 
    ********************
    
    PLEASE ATTACH THE FOLLOWING FILES TO THE BUG REPORT:
    Preprocessed source(s) and associated run script(s) are located at:
    clang: note: diagnostic msg: /tmp/testCCompiler-fd2308.c
    clang: note: diagnostic msg: /tmp/testCCompiler-fd2308.sh
    clang: note: diagnostic msg: 
    
    ********************
    ninja: build stopped: subcommand failed.
    
    

  

  CMake will not be able to correctly generate this project.
Call Stack (most recent call first):
  CMakeLists.txt:46 (project)


